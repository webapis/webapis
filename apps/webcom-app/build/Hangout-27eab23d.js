import { a as useAppRoute, h, w as List, x as ListItem } from './index-8f9661f1.js';
import { T as TextInput } from './TextInput-b833e830.js';
import { B as Button } from './Button-5feae320.js';

const style = {
  inputContainer: {
    display: 'flex',
    border: '#737373 solid 1px'
  },
  input: {
    padding: 10,
    flex: 1,
    border: 'white'
  }
};
function Hangout({
  hangouts,
  onSearch,
  onSelectHangout,
  search,
  users,
  onStartSearch
}) {
  const {
    onAppRoute
  } = useAppRoute();

  function handleHangoutSelection(e) {
    const id = e.target.id;
    onSelectHangout(e);
    const hangout = hangouts.find(g => g.username === id);
    onAppRoute({
      featureRoute: `/${hangout.state}`,
      route: '/hangouts'
    });
  }

  return h("div", null, h("div", {
    style: style.inputContainer
  }, h(TextInput, {
    value: search,
    id: "search-input",
    type: "search",
    onChange: onSearch,
    style: style.input
  }), h(Button, {
    "data-testid": "search-btn",
    disabled: !search,
    title: "search",
    onClick: onStartSearch
  })), h(List, {
    id: "hangouts-list"
  }, hangouts && hangouts.length > 0 && hangouts.map(g => {
    return h(ListItem, {
      id: g.username,
      onClick: handleHangoutSelection
    }, g.username);
  })));
}

export default Hangout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGFuZ291dC0yN2VhYjIzZC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vY2xpZW50L2hhbmdvdXRzL0hhbmdvdXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCB9IGZyb20gJ3ByZWFjdCc7XHJcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3ByZWFjdC9ob29rcyc7XHJcbmltcG9ydCB7IExpc3QsIExpc3RJdGVtIH0gZnJvbSAnLi4vbGF5b3V0L05hdkxpc3QnO1xyXG5pbXBvcnQgeyBUZXh0SW5wdXQgfSBmcm9tICcuLi9sYXlvdXQvVGV4dElucHV0JztcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vbGF5b3V0L0J1dHRvbic7XHJcbmltcG9ydCB7dXNlQXBwUm91dGV9ZnJvbSAnLi4vYXBwLXJvdXRlL0FwcFJvdXRlUHJvdmlkZXInXHJcblxyXG5jb25zdCBzdHlsZSA9IHtcclxuICBpbnB1dENvbnRhaW5lcjoge1xyXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgYm9yZGVyOiAnIzczNzM3MyBzb2xpZCAxcHgnLFxyXG4gIH0sXHJcbiAgaW5wdXQ6IHtcclxuICAgIHBhZGRpbmc6IDEwLFxyXG4gICAgZmxleDogMSxcclxuICAgIGJvcmRlcjogJ3doaXRlJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSGFuZ291dCh7XHJcbiAgaGFuZ291dHMsXHJcbiAgb25TZWFyY2gsXHJcbiAgb25TZWxlY3RIYW5nb3V0LFxyXG4gIHNlYXJjaCxcclxuICB1c2VycyxcclxuICBvblN0YXJ0U2VhcmNoLFxyXG59KSB7XHJcbiAgY29uc3Qge29uQXBwUm91dGV9PXVzZUFwcFJvdXRlKClcclxuICBmdW5jdGlvbiBoYW5kbGVIYW5nb3V0U2VsZWN0aW9uKGUpe1xyXG4gICAgY29uc3QgaWQgPWUudGFyZ2V0LmlkXHJcbiAgICBvblNlbGVjdEhhbmdvdXQoZSlcclxuICAgIGNvbnN0IGhhbmdvdXQgPSBoYW5nb3V0cy5maW5kKGc9PiBnLnVzZXJuYW1lPT09aWQpXHJcbiAgICBcclxuICAgIG9uQXBwUm91dGUoe2ZlYXR1cmVSb3V0ZTpgLyR7aGFuZ291dC5zdGF0ZX1gLHJvdXRlOicvaGFuZ291dHMnfSlcclxuICB9XHJcbiAgcmV0dXJuIChcclxuIFxyXG4gICAgPGRpdj5cclxuICAgICAgPGRpdiBzdHlsZT17c3R5bGUuaW5wdXRDb250YWluZXJ9PlxyXG4gICAgICAgIDxUZXh0SW5wdXRcclxuICAgICAgICAgIHZhbHVlPXtzZWFyY2h9XHJcbiAgICAgICAgICBpZD1cInNlYXJjaC1pbnB1dFwiXHJcbiAgICAgICAgICB0eXBlPVwic2VhcmNoXCJcclxuICAgICAgICAgIG9uQ2hhbmdlPXtvblNlYXJjaH1cclxuICAgICAgICAgIHN0eWxlPXtzdHlsZS5pbnB1dH1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxCdXR0b25cclxuICAgICAgICAgIGRhdGEtdGVzdGlkPVwic2VhcmNoLWJ0blwiXHJcbiAgICAgICAgICBkaXNhYmxlZD17IXNlYXJjaH1cclxuICAgICAgICAgIHRpdGxlPVwic2VhcmNoXCJcclxuICAgICAgICAgIG9uQ2xpY2s9e29uU3RhcnRTZWFyY2h9XHJcbiAgICAgICAgLz5cclxuICAgICAgPC9kaXY+XHJcblxyXG4gICAgICA8TGlzdCBpZD1cImhhbmdvdXRzLWxpc3RcIj5cclxuICAgICAgICB7aGFuZ291dHMgJiZcclxuICAgICAgICAgIGhhbmdvdXRzLmxlbmd0aCA+IDAgJiZcclxuICAgICAgICAgIGhhbmdvdXRzLm1hcCgoZykgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgIDxMaXN0SXRlbSBpZD17Zy51c2VybmFtZX0gb25DbGljaz17aGFuZGxlSGFuZ291dFNlbGVjdGlvbn0+XHJcbiAgICAgICAgICAgICAgICB7Zy51c2VybmFtZX1cclxuICAgICAgICAgICAgICA8L0xpc3RJdGVtPlxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgfSl9XHJcbiAgICAgIDwvTGlzdD5cclxuICAgXHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJzdHlsZSIsImlucHV0Q29udGFpbmVyIiwiZGlzcGxheSIsImJvcmRlciIsImlucHV0IiwicGFkZGluZyIsImZsZXgiLCJIYW5nb3V0IiwiaGFuZ291dHMiLCJvblNlYXJjaCIsIm9uU2VsZWN0SGFuZ291dCIsInNlYXJjaCIsInVzZXJzIiwib25TdGFydFNlYXJjaCIsIm9uQXBwUm91dGUiLCJ1c2VBcHBSb3V0ZSIsImhhbmRsZUhhbmdvdXRTZWxlY3Rpb24iLCJlIiwiaWQiLCJ0YXJnZXQiLCJoYW5nb3V0IiwiZmluZCIsImciLCJ1c2VybmFtZSIsImZlYXR1cmVSb3V0ZSIsInN0YXRlIiwicm91dGUiLCJsZW5ndGgiLCJtYXAiXSwibWFwcGluZ3MiOiI7Ozs7QUFPQSxNQUFNQSxLQUFLLEdBQUc7QUFDWkMsRUFBQUEsY0FBYyxFQUFFO0FBQ2RDLElBQUFBLE9BQU8sRUFBRSxNQURLO0FBRWRDLElBQUFBLE1BQU0sRUFBRTtBQUZNLEdBREo7QUFLWkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLE9BQU8sRUFBRSxFQURKO0FBRUxDLElBQUFBLElBQUksRUFBRSxDQUZEO0FBR0xILElBQUFBLE1BQU0sRUFBRTtBQUhIO0FBTEssQ0FBZDtBQVllLFNBQVNJLE9BQVQsQ0FBaUI7QUFDOUJDLEVBQUFBLFFBRDhCO0FBRTlCQyxFQUFBQSxRQUY4QjtBQUc5QkMsRUFBQUEsZUFIOEI7QUFJOUJDLEVBQUFBLE1BSjhCO0FBSzlCQyxFQUFBQSxLQUw4QjtBQU05QkMsRUFBQUE7QUFOOEIsQ0FBakIsRUFPWjtBQUNELFFBQU07QUFBQ0MsSUFBQUE7QUFBRCxNQUFhQyxXQUFXLEVBQTlCOztBQUNBLFdBQVNDLHNCQUFULENBQWdDQyxDQUFoQyxFQUFrQztBQUNoQyxVQUFNQyxFQUFFLEdBQUVELENBQUMsQ0FBQ0UsTUFBRixDQUFTRCxFQUFuQjtBQUNBUixJQUFBQSxlQUFlLENBQUNPLENBQUQsQ0FBZjtBQUNBLFVBQU1HLE9BQU8sR0FBR1osUUFBUSxDQUFDYSxJQUFULENBQWNDLENBQUMsSUFBR0EsQ0FBQyxDQUFDQyxRQUFGLEtBQWFMLEVBQS9CLENBQWhCO0FBRUFKLElBQUFBLFVBQVUsQ0FBQztBQUFDVSxNQUFBQSxZQUFZLEVBQUUsSUFBR0osT0FBTyxDQUFDSyxLQUFNLEVBQWhDO0FBQWtDQyxNQUFBQSxLQUFLLEVBQUM7QUFBeEMsS0FBRCxDQUFWO0FBQ0Q7O0FBQ0QsU0FFRSxlQUNFO0FBQUssSUFBQSxLQUFLLEVBQUUxQixLQUFLLENBQUNDO0FBQWxCLEtBQ0UsRUFBQyxTQUFEO0FBQ0UsSUFBQSxLQUFLLEVBQUVVLE1BRFQ7QUFFRSxJQUFBLEVBQUUsRUFBQyxjQUZMO0FBR0UsSUFBQSxJQUFJLEVBQUMsUUFIUDtBQUlFLElBQUEsUUFBUSxFQUFFRixRQUpaO0FBS0UsSUFBQSxLQUFLLEVBQUVULEtBQUssQ0FBQ0k7QUFMZixJQURGLEVBUUUsRUFBQyxNQUFEO0FBQ0UsbUJBQVksWUFEZDtBQUVFLElBQUEsUUFBUSxFQUFFLENBQUNPLE1BRmI7QUFHRSxJQUFBLEtBQUssRUFBQyxRQUhSO0FBSUUsSUFBQSxPQUFPLEVBQUVFO0FBSlgsSUFSRixDQURGLEVBaUJFLEVBQUMsSUFBRDtBQUFNLElBQUEsRUFBRSxFQUFDO0FBQVQsS0FDR0wsUUFBUSxJQUNQQSxRQUFRLENBQUNtQixNQUFULEdBQWtCLENBRG5CLElBRUNuQixRQUFRLENBQUNvQixHQUFULENBQWNOLENBQUQsSUFBTztBQUNsQixXQUNFLEVBQUMsUUFBRDtBQUFVLE1BQUEsRUFBRSxFQUFFQSxDQUFDLENBQUNDLFFBQWhCO0FBQTBCLE1BQUEsT0FBTyxFQUFFUDtBQUFuQyxPQUNHTSxDQUFDLENBQUNDLFFBREwsQ0FERjtBQUtELEdBTkQsQ0FISixDQWpCRixDQUZGO0FBaUNEOzs7OyJ9
