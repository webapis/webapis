import { u as useAuthContext, h } from './index-d3f401e5.js';
import { B as Button, v as validationTypes, I as Input, F as Form, f as forgotPassword, a as valueChanged } from './actions-004bfb8b.js';

function RequestPassChange() {
  const {
    dispatch,
    state
  } = useAuthContext();
  const {
    email
  } = state;

  function handleForgotPassword() {
    dispatch(forgotPassword({
      dispatch,
      state
    }));
  }

  function handleChange(e) {
    const {
      name,
      value
    } = e.target;
    dispatch(valueChanged({
      propName: name,
      value,
      dispatch,
      state
    }));
  }

  return h("div", {
    "data-testid": "signupform",
    className: "auth-form"
  }, h(Form, {
    formTitle: "Forgot Password"
  }, h(Input, {
    value: email,
    placeholder: "email",
    name: "email",
    onChange: handleChange,
    type: "email",
    id: "email",
    validationTypes: [validationTypes.EMAIL_FORMAT_VALIDATION, validationTypes.EMAIL_NOT_REGISTERED]
  }), h(Button, {
    className: "btn",
    type: "button",
    onClick: handleForgotPassword,
    id: "requestpasschange-btn",
    title: "Send"
  })));
}

export default RequestPassChange;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRm9yZ290UGFzc3dvcmQtNjU5MThjZGQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NsaWVudC9hdXRoL0ZvcmdvdFBhc3N3b3JkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGggfSBmcm9tICdwcmVhY3QnO1xyXG5pbXBvcnQgSW5wdXQgZnJvbSAnLi4vZm9ybS9JbnB1dCc7XHJcbmltcG9ydCBGb3JtIGZyb20gJy4uL2Zvcm0vRm9ybSc7XHJcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vZm9ybS9CdXR0b24nO1xyXG5pbXBvcnQgdmFsaWRhdGlvblR5cGVzIGZyb20gJy4uL2Zvcm0vdmFsaWRhdGlvblR5cGVzJztcclxuaW1wb3J0ICcuL2Nzcy9zdHlsZS5jc3MnO1xyXG5pbXBvcnQgeyB1c2VBdXRoQ29udGV4dCB9IGZyb20gJy4vYXV0aC1jb250ZXh0JztcclxuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuL2FjdGlvbnMnO1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSZXF1ZXN0UGFzc0NoYW5nZSgpIHtcclxuICBjb25zdCB7IGRpc3BhdGNoLCBzdGF0ZSB9ID0gdXNlQXV0aENvbnRleHQoKTtcclxuICBjb25zdCB7IGVtYWlsIH0gPSBzdGF0ZTtcclxuXHJcbiAgZnVuY3Rpb24gaGFuZGxlRm9yZ290UGFzc3dvcmQoKSB7XHJcbiAgICBkaXNwYXRjaChhY3Rpb25zLmZvcmdvdFBhc3N3b3JkKHsgZGlzcGF0Y2gsIHN0YXRlIH0pKTtcclxuICB9XHJcbiAgZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKGUpIHtcclxuICAgIGNvbnN0IHsgbmFtZSwgdmFsdWUgfSA9IGUudGFyZ2V0O1xyXG4gICAgZGlzcGF0Y2goYWN0aW9ucy52YWx1ZUNoYW5nZWQoeyBwcm9wTmFtZTogbmFtZSwgdmFsdWUsIGRpc3BhdGNoLCBzdGF0ZSB9KSk7XHJcbiAgfVxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGRhdGEtdGVzdGlkPVwic2lnbnVwZm9ybVwiIGNsYXNzTmFtZT1cImF1dGgtZm9ybVwiPlxyXG4gICAgICA8Rm9ybSBmb3JtVGl0bGU9XCJGb3Jnb3QgUGFzc3dvcmRcIj5cclxuICAgICAgICA8SW5wdXRcclxuICAgICAgICAgIHZhbHVlPXtlbWFpbH1cclxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiZW1haWxcIlxyXG4gICAgICAgICAgbmFtZT1cImVtYWlsXCJcclxuICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XHJcbiAgICAgICAgICB0eXBlPVwiZW1haWxcIlxyXG4gICAgICAgICAgaWQ9XCJlbWFpbFwiXHJcbiAgICAgICAgICB2YWxpZGF0aW9uVHlwZXM9e1tcclxuICAgICAgICAgICAgdmFsaWRhdGlvblR5cGVzLkVNQUlMX0ZPUk1BVF9WQUxJREFUSU9OLFxyXG4gICAgICAgICAgICB2YWxpZGF0aW9uVHlwZXMuRU1BSUxfTk9UX1JFR0lTVEVSRUQsXHJcbiAgICAgICAgICBdfVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPEJ1dHRvblxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiYnRuXCJcclxuICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxyXG4gICAgICAgICAgb25DbGljaz17aGFuZGxlRm9yZ290UGFzc3dvcmR9XHJcbiAgICAgICAgICBpZD1cInJlcXVlc3RwYXNzY2hhbmdlLWJ0blwiXHJcbiAgICAgICAgICB0aXRsZT1cIlNlbmRcIlxyXG4gICAgICAgIC8+XHJcbiAgICAgIDwvRm9ybT5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbIlJlcXVlc3RQYXNzQ2hhbmdlIiwiZGlzcGF0Y2giLCJzdGF0ZSIsInVzZUF1dGhDb250ZXh0IiwiZW1haWwiLCJoYW5kbGVGb3Jnb3RQYXNzd29yZCIsImFjdGlvbnMiLCJoYW5kbGVDaGFuZ2UiLCJlIiwibmFtZSIsInZhbHVlIiwidGFyZ2V0IiwicHJvcE5hbWUiLCJ2YWxpZGF0aW9uVHlwZXMiLCJFTUFJTF9GT1JNQVRfVkFMSURBVElPTiIsIkVNQUlMX05PVF9SRUdJU1RFUkVEIl0sIm1hcHBpbmdzIjoiOzs7QUFRZSxTQUFTQSxpQkFBVCxHQUE2QjtBQUMxQyxRQUFNO0FBQUVDLElBQUFBLFFBQUY7QUFBWUMsSUFBQUE7QUFBWixNQUFzQkMsY0FBYyxFQUExQztBQUNBLFFBQU07QUFBRUMsSUFBQUE7QUFBRixNQUFZRixLQUFsQjs7QUFFQSxXQUFTRyxvQkFBVCxHQUFnQztBQUM5QkosSUFBQUEsUUFBUSxDQUFDSyxjQUFBLENBQXVCO0FBQUVMLE1BQUFBLFFBQUY7QUFBWUMsTUFBQUE7QUFBWixLQUF2QixDQUFELENBQVI7QUFDRDs7QUFDRCxXQUFTSyxZQUFULENBQXNCQyxDQUF0QixFQUF5QjtBQUN2QixVQUFNO0FBQUVDLE1BQUFBLElBQUY7QUFBUUMsTUFBQUE7QUFBUixRQUFrQkYsQ0FBQyxDQUFDRyxNQUExQjtBQUNBVixJQUFBQSxRQUFRLENBQUNLLFlBQUEsQ0FBcUI7QUFBRU0sTUFBQUEsUUFBUSxFQUFFSCxJQUFaO0FBQWtCQyxNQUFBQSxLQUFsQjtBQUF5QlQsTUFBQUEsUUFBekI7QUFBbUNDLE1BQUFBO0FBQW5DLEtBQXJCLENBQUQsQ0FBUjtBQUNEOztBQUNELFNBQ0U7QUFBSyxtQkFBWSxZQUFqQjtBQUE4QixJQUFBLFNBQVMsRUFBQztBQUF4QyxLQUNFLEVBQUMsSUFBRDtBQUFNLElBQUEsU0FBUyxFQUFDO0FBQWhCLEtBQ0UsRUFBQyxLQUFEO0FBQ0UsSUFBQSxLQUFLLEVBQUVFLEtBRFQ7QUFFRSxJQUFBLFdBQVcsRUFBQyxPQUZkO0FBR0UsSUFBQSxJQUFJLEVBQUMsT0FIUDtBQUlFLElBQUEsUUFBUSxFQUFFRyxZQUpaO0FBS0UsSUFBQSxJQUFJLEVBQUMsT0FMUDtBQU1FLElBQUEsRUFBRSxFQUFDLE9BTkw7QUFPRSxJQUFBLGVBQWUsRUFBRSxDQUNmTSxlQUFlLENBQUNDLHVCQURELEVBRWZELGVBQWUsQ0FBQ0Usb0JBRkQ7QUFQbkIsSUFERixFQWFFLEVBQUMsTUFBRDtBQUNFLElBQUEsU0FBUyxFQUFDLEtBRFo7QUFFRSxJQUFBLElBQUksRUFBQyxRQUZQO0FBR0UsSUFBQSxPQUFPLEVBQUVWLG9CQUhYO0FBSUUsSUFBQSxFQUFFLEVBQUMsdUJBSkw7QUFLRSxJQUFBLEtBQUssRUFBQztBQUxSLElBYkYsQ0FERixDQURGO0FBeUJEOzs7OyJ9
