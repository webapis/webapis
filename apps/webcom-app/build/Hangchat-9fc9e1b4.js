import { a as h, E as d } from './index-bdb5940f.js';
import { T as TextInput } from './TextInput-239c790c.js';
import { B as Button } from './Button-508f2902.js';
import { L as Layout } from './Layout-26b487fb.js';
import { M as Message } from './Message-8e662a10.js';

const styles = {
  root: {
    display: 'flex',
    alignItems: 'center'
  },
  input: {//margin:0
  }
};
function MessageEditor({
  messageText,
  onMessageText,
  onMessage
}) {
  return h("div", {
    style: styles.root
  }, h(TextInput, {
    onChange: onMessageText,
    value: messageText
  }), h("div", null, h(Button, {
    title: "send",
    onClick: onMessage
  })));
}

const styles$1 = {
  messageContainer: {
    width: '100%',
    // backgroundColor: 'orange',
    height: '20vh',
    overflow: 'auto'
  }
};
function Messages({
  messages,
  username
}) {
  const scrollerRef = d(null);

  function onSend() {
    scrollerRef.current.scrollTop = scrollerRef.current.scrollHeight;
  }

  return h("div", null, h("div", {
    style: styles$1.messageContainer,
    ref: scrollerRef
  }, floatMessages({
    messages: sortMessages({
      messages
    }),
    username
  }).map(m => h("div", {
    style: {
      display: 'flex'
    }
  }, ' ', h(Message, {
    message: m
  })))), h(MessageEditor, {
    onMessage: onSend
  }));
}

function floatMessages({
  messages,
  username
}) {
  if (messages && username) {
    return messages.map(msg => {
      if (msg.username === username) {
        return { ...msg,
          float: 'right',
          username: 'me'
        };
      } else {
        return { ...msg,
          float: 'left'
        };
      }
    });
  } else {
    throw new Error('messages or username not provided');
  }
}

function sortMessages({
  messages
}) {
  if (messages) {
    return messages.sort();
  } else {
    throw new Error('messages not provided for sortMessages');
  }
}

function Hangchat({
  messages = [],
  onMessageText,
  onMessage,
  messageText,
  username
}) {
  return h(Layout, {
    id: "hangchat-ui"
  }, h(Messages, {
    messages: messages,
    onMessage: onMessage,
    onMessageText: onMessageText,
    messageText: true,
    username: username
  }));
}

export default Hangchat;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGFuZ2NoYXQtOWZjOWUxYjQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NsaWVudC9oYW5nb3V0cy91aS9NZXNzYWdlRWRpdG9yLmpzIiwiLi4vLi4vLi4vY2xpZW50L2hhbmdvdXRzL3VpL01lc3NhZ2VzLmpzIiwiLi4vLi4vLi4vY2xpZW50L2hhbmdvdXRzL3N0YXRlLXVpL0hhbmdjaGF0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGggfSBmcm9tICdwcmVhY3QnO1xuaW1wb3J0IHsgVGV4dElucHV0IH0gZnJvbSAnLi4vLi4vbGF5b3V0L1RleHRJbnB1dCc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi8uLi9sYXlvdXQvQnV0dG9uJztcbmNvbnN0IHN0eWxlcyA9IHtcbiAgcm9vdDoge1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgfSxcbiAgaW5wdXQ6IHtcbiAgICAvL21hcmdpbjowXG4gIH0sXG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1lc3NhZ2VFZGl0b3IoeyBtZXNzYWdlVGV4dCwgb25NZXNzYWdlVGV4dCwgb25NZXNzYWdlIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IHN0eWxlPXtzdHlsZXMucm9vdH0+XG4gICAgICA8VGV4dElucHV0IG9uQ2hhbmdlPXtvbk1lc3NhZ2VUZXh0fSB2YWx1ZT17bWVzc2FnZVRleHR9IC8+XG4gICAgICA8ZGl2PlxuICAgICAgICA8QnV0dG9uIHRpdGxlPVwic2VuZFwiIG9uQ2xpY2s9e29uTWVzc2FnZX0vPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBoIH0gZnJvbSAncHJlYWN0JztcbmltcG9ydCB7dXNlUmVmfSBmcm9tICdwcmVhY3QvaG9va3MnXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSAnLi9NZXNzYWdlJztcbmltcG9ydCB7TWVzc2FnZUVkaXRvcn0gZnJvbSAnLi9NZXNzYWdlRWRpdG9yJ1xuY29uc3Qgc3R5bGVzID0ge1xuICBtZXNzYWdlQ29udGFpbmVyOiB7XG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICAvLyBiYWNrZ3JvdW5kQ29sb3I6ICdvcmFuZ2UnLFxuICAgIGhlaWdodDogJzIwdmgnLFxuICAgIG92ZXJmbG93OiAnYXV0bycsXG4gIH0sXG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1lc3NhZ2VzKHsgbWVzc2FnZXMsIHVzZXJuYW1lIH0pIHtcbiAgICBjb25zdCBzY3JvbGxlclJlZiA9IHVzZVJlZihudWxsKTtcbiAgICBmdW5jdGlvbiBvblNlbmQoKXtcbiAgICAgICAgc2Nyb2xsZXJSZWYuY3VycmVudC5zY3JvbGxUb3AgPSBzY3JvbGxlclJlZi5jdXJyZW50LnNjcm9sbEhlaWdodDtcbiAgICB9XG4gIHJldHVybiAoXG4gICAgICA8ZGl2PlxuXG4gICBcbiAgICA8ZGl2IHN0eWxlPXtzdHlsZXMubWVzc2FnZUNvbnRhaW5lcn0gcmVmPXtzY3JvbGxlclJlZn0+XG4gICAgICB7ZmxvYXRNZXNzYWdlcyh7IG1lc3NhZ2VzOiBzb3J0TWVzc2FnZXMoeyBtZXNzYWdlcyB9KSwgdXNlcm5hbWUgfSkubWFwKFxuICAgICAgICAobSkgPT4gKFxuICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnIH19PlxuICAgICAgICAgICAgeycgJ31cbiAgICAgICAgICAgIDxNZXNzYWdlIG1lc3NhZ2U9e219IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICAgICl9XG4gICAgICBcbiAgICA8L2Rpdj5cbiAgICA8TWVzc2FnZUVkaXRvciBvbk1lc3NhZ2U9e29uU2VuZH0vPlxuICAgICAgIDwvZGl2PlxuICApO1xufVxuZnVuY3Rpb24gZmxvYXRNZXNzYWdlcyh7IG1lc3NhZ2VzLCB1c2VybmFtZSB9KSB7XG4gIGlmIChtZXNzYWdlcyAmJiB1c2VybmFtZSkge1xuICAgIHJldHVybiBtZXNzYWdlcy5tYXAoKG1zZykgPT4ge1xuICAgICAgaWYgKG1zZy51c2VybmFtZSA9PT0gdXNlcm5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHsgLi4ubXNnLCBmbG9hdDogJ3JpZ2h0JywgdXNlcm5hbWU6ICdtZScgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7IC4uLm1zZywgZmxvYXQ6ICdsZWZ0JyB9O1xuICAgICAgfVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcignbWVzc2FnZXMgb3IgdXNlcm5hbWUgbm90IHByb3ZpZGVkJyk7XG4gIH1cbn1cbmZ1bmN0aW9uIHNvcnRNZXNzYWdlcyh7IG1lc3NhZ2VzIH0pIHtcbiAgaWYgKG1lc3NhZ2VzKSB7XG4gICAgcmV0dXJuIG1lc3NhZ2VzLnNvcnQoKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ21lc3NhZ2VzIG5vdCBwcm92aWRlZCBmb3Igc29ydE1lc3NhZ2VzJyk7XG4gIH1cbn1cbiIsImltcG9ydCB7IGggfSBmcm9tICdwcmVhY3QnO1xuaW1wb3J0IHsgTWVzc2FnZXMgfSBmcm9tICcuLi91aS9NZXNzYWdlcyc7XG5pbXBvcnQgeyBMYXlvdXQgfSBmcm9tICcuL0xheW91dCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIYW5nY2hhdCh7XG4gIG1lc3NhZ2VzID0gW10sXG4gIG9uTWVzc2FnZVRleHQsXG4gIG9uTWVzc2FnZSxcbiAgbWVzc2FnZVRleHQsXG4gIHVzZXJuYW1lXG59KSB7XG4gIHJldHVybiAoXG4gICAgPExheW91dCBpZD1cImhhbmdjaGF0LXVpXCI+XG4gICAgICA8TWVzc2FnZXNcbiAgICAgICAgbWVzc2FnZXM9e21lc3NhZ2VzfVxuICAgICAgICBvbk1lc3NhZ2U9e29uTWVzc2FnZX1cbiAgICAgICAgb25NZXNzYWdlVGV4dD17b25NZXNzYWdlVGV4dH1cbiAgICAgICAgbWVzc2FnZVRleHRcbiAgICAgICAgdXNlcm5hbWU9e3VzZXJuYW1lfVxuICAgICAgLz5cbiAgICA8L0xheW91dD5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJzdHlsZXMiLCJyb290IiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJpbnB1dCIsIk1lc3NhZ2VFZGl0b3IiLCJtZXNzYWdlVGV4dCIsIm9uTWVzc2FnZVRleHQiLCJvbk1lc3NhZ2UiLCJtZXNzYWdlQ29udGFpbmVyIiwid2lkdGgiLCJoZWlnaHQiLCJvdmVyZmxvdyIsIk1lc3NhZ2VzIiwibWVzc2FnZXMiLCJ1c2VybmFtZSIsInNjcm9sbGVyUmVmIiwidXNlUmVmIiwib25TZW5kIiwiY3VycmVudCIsInNjcm9sbFRvcCIsInNjcm9sbEhlaWdodCIsImZsb2F0TWVzc2FnZXMiLCJzb3J0TWVzc2FnZXMiLCJtYXAiLCJtIiwibXNnIiwiZmxvYXQiLCJFcnJvciIsInNvcnQiLCJIYW5nY2hhdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0EsTUFBTUEsTUFBTSxHQUFHO0FBQ2JDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxPQUFPLEVBQUUsTUFETDtBQUVKQyxJQUFBQSxVQUFVLEVBQUU7QUFGUixHQURPO0FBS2JDLEVBQUFBLEtBQUssRUFBRTtBQUFBO0FBTE0sQ0FBZjtBQVNPLFNBQVNDLGFBQVQsQ0FBdUI7QUFBRUMsRUFBQUEsV0FBRjtBQUFlQyxFQUFBQSxhQUFmO0FBQThCQyxFQUFBQTtBQUE5QixDQUF2QixFQUFrRTtBQUN2RSxTQUNFO0FBQUssSUFBQSxLQUFLLEVBQUVSLE1BQU0sQ0FBQ0M7QUFBbkIsS0FDRSxFQUFDLFNBQUQ7QUFBVyxJQUFBLFFBQVEsRUFBRU0sYUFBckI7QUFBb0MsSUFBQSxLQUFLLEVBQUVEO0FBQTNDLElBREYsRUFFRSxlQUNFLEVBQUMsTUFBRDtBQUFRLElBQUEsS0FBSyxFQUFDLE1BQWQ7QUFBcUIsSUFBQSxPQUFPLEVBQUVFO0FBQTlCLElBREYsQ0FGRixDQURGO0FBUUQ7O0FDakJELE1BQU1SLFFBQU0sR0FBRztBQUNiUyxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNoQkMsSUFBQUEsS0FBSyxFQUFFLE1BRFM7QUFFaEI7QUFDQUMsSUFBQUEsTUFBTSxFQUFFLE1B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
