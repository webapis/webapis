import { u as useContactsContext, b as useRouteContext, E as useAppContext, p, h, U, F as Route, L } from './index-5ddb3fa4.js';

const Contacts = L(() => import('./Contacts-0167f9f3.js'));
const Block = L(() => import('./Block-b30f04ca.js'));
const Blocked = L(() => import('./Blocked-46b482c4.js'));
const Chat = L(() => import('./Chat-73a4e989.js'));
const Configure = L(() => import('./Configure-2112bec4.js'));
const Invite = L(() => import('./Invite-72b1d051.js'));
const Invitee = L(() => import('./Invitee-9ea914d2.js'));
const Inviter = L(() => import('./Inviter-73dcc3b2.js'));
function PeerToPeerMobile() {
  const [state, dispatch] = useContactsContext();
  const [route, setRoute] = useRouteContext();
  const {
    contact
  } = state;
  const {
    accept_inv_img
  } = useAppContext();
  p(() => {
    if (contact) {
      setRoute(`/${contact.state}`);
    }
  }, [contact]);

  function onSetting() {
    setRoute('/cofigure');
  }

  return h("div", {
    style: {
      height: '85vh'
    }
  }, h(Route, {
    path: "/contacts"
  }, h(U, {
    fallback: h("div", null, "loading...")
  }, h(Contacts, null))), h(Route, {
    path: "/block"
  }, h(U, {
    fallback: h("div", null, "loading...")
  }, h(Block, {
    contact: contact
  }))), h(Route, {
    path: "/blocked"
  }, h(U, {
    fallback: h("div", null, "loading...")
  }, h(Blocked, {
    contact: contact
  }))), h(Route, {
    path: "/chat"
  }, h(U, {
    fallback: h("div", null, "loading...")
  }, h(Chat, {
    contact: contact,
    onSetting: onSetting
  }))), h(Route, {
    path: "/cofigure"
  }, h(U, {
    fallback: h("div", null, "loading...")
  }, h(Configure, {
    contact: contact
  }))), h(Route, {
    path: "/invite"
  }, h(U, {
    fallback: h("div", null, "loading...")
  }, h(Invite, {
    contact: contact
  }))), h(Route, {
    path: "/invitee"
  }, h(U, {
    fallback: h("div", null, "loading...")
  }, h(Invitee, {
    contact: contact
  }))), h(Route, {
    path: "/inviter"
  }, h(U, {
    fallback: h("div", null, "loading...")
  }, h(Inviter, {
    accept_inv_img: accept_inv_img,
    contact: contact
  }))));
}

export default PeerToPeerMobile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicDJwLW1vYmlsZS1hMDFhZTAxNi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vY2xpZW50L3AycC9tb2JpbGUvcDJwLW1vYmlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoIH0gZnJvbSAncHJlYWN0JztcclxuaW1wb3J0IHsgU3VzcGVuc2UsIGxhenkgfSBmcm9tICdwcmVhY3QvY29tcGF0JztcclxuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncHJlYWN0L2hvb2tzJztcclxuaW1wb3J0IHsgUm91dGUsIHVzZVJvdXRlQ29udGV4dCB9IGZyb20gJy4uLy4uL3JvdXRlL3JvdXRlcic7XHJcbmltcG9ydCB7IHVzZUNvbnRhY3RzQ29udGV4dCB9IGZyb20gJy4uLy4uL2NvbnRhY3RzL2NvbnRhY3QtY29udGV4dCc7XHJcbmltcG9ydCB7IHVzZUFwcENvbnRleHQgfSBmcm9tICcuLi8uLi9hcHAtY29udGV4dC9hcHAtY29udGV4dCc7XHJcbmNvbnN0IENvbnRhY3RzID0gbGF6eSgoKSA9PiBpbXBvcnQoJy4uLy4uL2NvbnRhY3RzL0NvbnRhY3RzJykpO1xyXG5jb25zdCBCbG9jayA9IGxhenkoKCkgPT4gaW1wb3J0KCcuLi8uLi9jaGF0L0Jsb2NrJykpO1xyXG5jb25zdCBCbG9ja2VkID0gbGF6eSgoKSA9PiBpbXBvcnQoJy4uLy4uL2NoYXQvQmxvY2tlZCcpKTtcclxuY29uc3QgQ2hhdCA9IGxhenkoKCkgPT4gaW1wb3J0KCcuLi8uLi9jaGF0L0NoYXQnKSk7XHJcbmNvbnN0IENvbmZpZ3VyZSA9IGxhenkoKCkgPT4gaW1wb3J0KCcuLi8uLi9jaGF0L0NvbmZpZ3VyZScpKTtcclxuY29uc3QgSW52aXRlID0gbGF6eSgoKSA9PiBpbXBvcnQoJy4uLy4uL2NoYXQvSW52aXRlJykpO1xyXG5jb25zdCBJbnZpdGVlID0gbGF6eSgoKSA9PiBpbXBvcnQoJy4uLy4uL2NoYXQvSW52aXRlZScpKTtcclxuY29uc3QgSW52aXRlciA9IGxhenkoKCkgPT4gaW1wb3J0KCcuLi8uLi9jaGF0L0ludml0ZXInKSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQZWVyVG9QZWVyTW9iaWxlKCkge1xyXG4gIGNvbnN0IFtzdGF0ZSwgZGlzcGF0Y2hdID0gdXNlQ29udGFjdHNDb250ZXh0KCk7XHJcbiAgY29uc3QgW3JvdXRlLCBzZXRSb3V0ZV0gPSB1c2VSb3V0ZUNvbnRleHQoKTtcclxuICBjb25zdCB7IGNvbnRhY3QgfSA9IHN0YXRlO1xyXG4gIGNvbnN0IHsgYWNjZXB0X2ludl9pbWcgfSA9IHVzZUFwcENvbnRleHQoKTtcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKGNvbnRhY3QpIHtcclxuICAgIFxyXG4gICAgICBzZXRSb3V0ZShgLyR7Y29udGFjdC5zdGF0ZX1gKTtcclxuICAgIH1cclxuICB9LCBbY29udGFjdF0pO1xyXG5cclxuICBmdW5jdGlvbiBvblNldHRpbmcgKCl7XHJcbiAgICBzZXRSb3V0ZSgnL2NvZmlndXJlJylcclxuICB9XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IHN0eWxlPXt7IGhlaWdodDogJzg1dmgnIH19PlxyXG4gICAgICA8Um91dGUgcGF0aD0nL2NvbnRhY3RzJz5cclxuICAgICAgICA8U3VzcGVuc2UgZmFsbGJhY2s9ezxkaXY+bG9hZGluZy4uLjwvZGl2Pn0+XHJcbiAgICAgICAgICA8Q29udGFjdHMgLz5cclxuICAgICAgICA8L1N1c3BlbnNlPlxyXG4gICAgICA8L1JvdXRlPlxyXG5cclxuICAgICAgPFJvdXRlIHBhdGg9Jy9ibG9jayc+XHJcbiAgICAgICAgPFN1c3BlbnNlIGZhbGxiYWNrPXs8ZGl2PmxvYWRpbmcuLi48L2Rpdj59PlxyXG4gICAgICAgICAgPEJsb2NrIGNvbnRhY3Q9e2NvbnRhY3R9IC8+XHJcbiAgICAgICAgPC9TdXNwZW5zZT5cclxuICAgICAgPC9Sb3V0ZT5cclxuICAgICAgPFJvdXRlIHBhdGg9Jy9ibG9ja2VkJz5cclxuICAgICAgICA8U3VzcGVuc2UgZmFsbGJhY2s9ezxkaXY+bG9hZGluZy4uLjwvZGl2Pn0+XHJcbiAgICAgICAgICA8QmxvY2tlZCBjb250YWN0PXtjb250YWN0fSAvPlxyXG4gICAgICAgIDwvU3VzcGVuc2U+XHJcbiAgICAgIDwvUm91dGU+XHJcbiAgICAgIDxSb3V0ZSBwYXRoPScvY2hhdCc+XHJcbiAgICAgICAgPFN1c3BlbnNlIGZhbGxiYWNrPXs8ZGl2PmxvYWRpbmcuLi48L2Rpdj59PlxyXG4gICAgICAgICAgPENoYXQgY29udGFjdD17Y29udGFjdH0gb25TZXR0aW5nPXtvblNldHRpbmd9IC8+XHJcbiAgICAgICAgPC9TdXNwZW5zZT5cclxuICAgICAgPC9Sb3V0ZT5cclxuICAgICAgPFJvdXRlIHBhdGg9Jy9jb2ZpZ3VyZSc+XHJcbiAgICAgICAgPFN1c3BlbnNlIGZhbGxiYWNrPXs8ZGl2PmxvYWRpbmcuLi48L2Rpdj59PlxyXG4gICAgICAgICAgPENvbmZpZ3VyZSBjb250YWN0PXtjb250YWN0fSAvPlxyXG4gICAgICAgIDwvU3VzcGVuc2U+XHJcbiAgICAgIDwvUm91dGU+XHJcbiAgICAgIDxSb3V0ZSBwYXRoPScvaW52aXRlJz5cclxuICAgICAgICA8U3VzcGVuc2UgZmFsbGJhY2s9ezxkaXY+bG9hZGluZy4uLjwvZGl2Pn0+XHJcbiAgICAgICAgICA8SW52aXRlIGNvbnRhY3Q9e2NvbnRhY3R9IC8+XHJcbiAgICAgICAgPC9TdXNwZW5zZT5cclxuICAgICAgPC9Sb3V0ZT5cclxuICAgICAgPFJvdXRlIHBhdGg9Jy9pbnZpdGVlJz5cclxuICAgICAgICA8U3VzcGVuc2UgZmFsbGJhY2s9ezxkaXY+bG9hZGluZy4uLjwvZGl2Pn0+XHJcbiAgICAgICAgICA8SW52aXRlZSBjb250YWN0PXtjb250YWN0fSAvPlxyXG4gICAgICAgIDwvU3VzcGVuc2U+XHJcbiAgICAgIDwvUm91dGU+XHJcbiAgICAgIDxSb3V0ZSBwYXRoPScvaW52aXRlcic+XHJcbiAgICAgICAgPFN1c3BlbnNlIGZhbGxiYWNrPXs8ZGl2PmxvYWRpbmcuLi48L2Rpdj59PlxyXG4gICAgICAgICAgPEludml0ZXIgYWNjZXB0X2ludl9pbWc9e2FjY2VwdF9pbnZfaW1nfSBjb250YWN0PXtjb250YWN0fSAvPlxyXG4gICAgICAgIDwvU3VzcGVuc2U+XHJcbiAgICAgIDwvUm91dGU+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJDb250YWN0cyIsImxhenkiLCJCbG9jayIsIkJsb2NrZWQiLCJDaGF0IiwiQ29uZmlndXJlIiwiSW52aXRlIiwiSW52aXRlZSIsIkludml0ZXIiLCJQZWVyVG9QZWVyTW9iaWxlIiwic3RhdGUiLCJkaXNwYXRjaCIsInVzZUNvbnRhY3RzQ29udGV4dCIsInJvdXRlIiwic2V0Um91dGUiLCJ1c2VSb3V0ZUNvbnRleHQiLCJjb250YWN0IiwiYWNjZXB0X2ludl9pbWciLCJ1c2VBcHBDb250ZXh0IiwidXNlRWZmZWN0Iiwib25TZXR0aW5nIiwiaGVpZ2h0IiwiU3VzcGVuc2UiXSwibWFwcGluZ3MiOiI7O0FBTUEsTUFBTUEsUUFBUSxHQUFHQyxDQUFJLENBQUMsTUFBTSxPQUFPLHdCQUFQLENBQVAsQ0FBckI7QUFDQSxNQUFNQyxLQUFLLEdBQUdELENBQUksQ0FBQyxNQUFNLE9BQU8scUJBQVAsQ0FBUCxDQUFsQjtBQUNBLE1BQU1FLE9BQU8sR0FBR0YsQ0FBSSxDQUFDLE1BQU0sT0FBTyx1QkFBUCxDQUFQLENBQXBCO0FBQ0EsTUFBTUcsSUFBSSxHQUFHSCxDQUFJLENBQUMsTUFBTSxPQUFPLG9CQUFQLENBQVAsQ0FBakI7QUFDQSxNQUFNSSxTQUFTLEdBQUdKLENBQUksQ0FBQyxNQUFNLE9BQU8seUJBQVAsQ0FBUCxDQUF0QjtBQUNBLE1BQU1LLE1BQU0sR0FBR0wsQ0FBSSxDQUFDLE1BQU0sT0FBTyxzQkFBUCxDQUFQLENBQW5CO0FBQ0EsTUFBTU0sT0FBTyxHQUFHTixDQUFJLENBQUMsTUFBTSxPQUFPLHVCQUFQLENBQVAsQ0FBcEI7QUFDQSxNQUFNTyxPQUFPLEdBQUdQLENBQUksQ0FBQyxNQUFNLE9B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
