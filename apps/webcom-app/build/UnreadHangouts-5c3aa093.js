import { j as v, p, h, w as List, x as ListItem } from './index-5cfaf6c3.js';

function reducerUnreadhangouts({
  unreadhangouts
}) {
  return unreadhangouts.reduce((accumulator, current, index) => {
    if (index === 0) {
      return accumulator = [{ ...current,
        messageCount: 1
      }];
    } else {
      const obj = accumulator.find(a => a.username === current.username && current.state === 'MESSANGER');

      if (obj) {
        const index = accumulator.findIndex(a => a.username === current.username); //if current exist inside accumilator map it to that object

        accumulator.splice(index, 1, { ...obj,
          messageCount: ++obj.messageCount
        });
      } else {
        //if current exist inside accumilator map it to that object
        accumulator.push({ ...current,
          messageCount: 1
        });
      }
    }

    return accumulator;
  }, []);
}

function UnreadHangouts({
  unreadhangouts
}) {
  const [items, setItems] = v([]);
  p(() => {
    if (unreadhangouts) {
      const reduced = reducerUnreadhangouts({
        unreadhangouts
      });
      setItems(reduced);
    }
  }, [unreadhangouts]);
  return h("div", {
    "data-testid": "unreadhangouts"
  }, h(List, null, items && items.length > 0 && items.map(u => {
    debugger;
    return h(ListItem, {
      id: u.username
    }, u.username, " ", h("div", {
      style: {
        color: '#737373'
      }
    }, "messages: ", u.messageCount));
  })));
}

export default UnreadHangouts;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVW5yZWFkSGFuZ291dHMtNWMzYWEwOTMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NsaWVudC9oYW5nb3V0cy9zdGF0ZS9yZWR1Y2VVbnJlYWRoYW5nb3V0cy5qcyIsIi4uLy4uLy4uL2NsaWVudC9oYW5nb3V0cy9VbnJlYWRIYW5nb3V0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcmVkdWNlclVucmVhZGhhbmdvdXRzKHt1bnJlYWRoYW5nb3V0c30pe1xyXG4gICAgcmV0dXJuICAgdW5yZWFkaGFuZ291dHMucmVkdWNlKChhY2N1bXVsYXRvciwgY3VycmVudCwgaW5kZXgpID0+IHtcclxuICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcclxuICAgICAgICAgIHJldHVybiAoYWNjdW11bGF0b3IgPSBbeyAuLi5jdXJyZW50LCBtZXNzYWdlQ291bnQ6IDEgfV0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjb25zdCBvYmogPSBhY2N1bXVsYXRvci5maW5kKFxyXG4gICAgICAgICAgICAoYSkgPT4gYS51c2VybmFtZSA9PT0gY3VycmVudC51c2VybmFtZSAmJiBjdXJyZW50LnN0YXRlID09PSAnTUVTU0FOR0VSJ1xyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIGlmIChvYmopIHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBhY2N1bXVsYXRvci5maW5kSW5kZXgoXHJcbiAgICAgICAgICAgICAgKGEpID0+IGEudXNlcm5hbWUgPT09IGN1cnJlbnQudXNlcm5hbWVcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgLy9pZiBjdXJyZW50IGV4aXN0IGluc2lkZSBhY2N1bWlsYXRvciBtYXAgaXQgdG8gdGhhdCBvYmplY3RcclxuICAgICAgICAgICAgYWNjdW11bGF0b3Iuc3BsaWNlKGluZGV4LCAxLCB7XHJcbiAgICAgICAgICAgICAgLi4ub2JqLFxyXG4gICAgICAgICAgICAgIG1lc3NhZ2VDb3VudDogKytvYmoubWVzc2FnZUNvdW50LFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vaWYgY3VycmVudCBleGlzdCBpbnNpZGUgYWNjdW1pbGF0b3IgbWFwIGl0IHRvIHRoYXQgb2JqZWN0XHJcbiAgICAgICAgICAgIGFjY3VtdWxhdG9yLnB1c2goeyAuLi5jdXJyZW50LCBtZXNzYWdlQ291bnQ6IDEgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhY2N1bXVsYXRvcjtcclxuICAgICAgfSwgW10pO1xyXG59IiwiaW1wb3J0IHsgaCB9IGZyb20gJ3ByZWFjdCc7XHJcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdwcmVhY3QvaG9va3MnO1xyXG5pbXBvcnQgeyBMaXN0LCBMaXN0SXRlbSB9IGZyb20gJy4uL2xheW91dC9OYXZMaXN0JztcclxuaW1wb3J0IHtyZWR1Y2VyVW5yZWFkaGFuZ291dHN9IGZyb20gJy4uL2hhbmdvdXRzL3N0YXRlL3JlZHVjZVVucmVhZGhhbmdvdXRzJ1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBVbnJlYWRIYW5nb3V0cyh7IHVucmVhZGhhbmdvdXRzIH0pIHtcclxuICBjb25zdCBbaXRlbXMsc2V0SXRlbXNdID11c2VTdGF0ZShbXSlcclxudXNlRWZmZWN0KCgpPT57XHJcbmlmKHVucmVhZGhhbmdvdXRzKXtcclxuICBjb25zdCByZWR1Y2VkID1yZWR1Y2VyVW5yZWFkaGFuZ291dHMoe3VucmVhZGhhbmdvdXRzfSlcclxuICBzZXRJdGVtcyhyZWR1Y2VkKVxyXG59XHJcblxyXG59LFt1bnJlYWRoYW5nb3V0c10pXHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGRhdGEtdGVzdGlkPSd1bnJlYWRoYW5nb3V0cyc+XHJcbiAgICAgIDxMaXN0PlxyXG4gICAgICAgIHtpdGVtcyAmJlxyXG4gICAgICAgICAgaXRlbXMubGVuZ3RoID4gMCAmJlxyXG4gICAgICAgICAgaXRlbXMubWFwKCh1KSA9PiB7XHJcbiAgICAgICAgICAgIGRlYnVnZ2VyO1xyXG4gICAgICAgICAgcmV0dXJuIDxMaXN0SXRlbSBpZD17dS51c2VybmFtZX0+e3UudXNlcm5hbWV9IDxkaXYgc3R5bGU9e3tjb2xvcjonIzczNzM3Myd9fT5tZXNzYWdlczoge3UubWVzc2FnZUNvdW50fTwvZGl2PjwvTGlzdEl0ZW0+O1xyXG4gICAgICAgICAgfSl9XHJcbiAgICAgIDwvTGlzdD5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbInJlZHVjZXJVbnJlYWRoYW5nb3V0cyIsInVucmVhZGhhbmdvdXRzIiwicmVkdWNlIiwiYWNjdW11bGF0b3IiLCJjdXJyZW50IiwiaW5kZXgiLCJtZXNzYWdlQ291bnQiLCJvYmoiLCJmaW5kIiwiYSIsInVzZXJuYW1lIiwic3RhdGUiLCJmaW5kSW5kZXgiLCJzcGxpY2UiLCJwdXNoIiwiVW5yZWFkSGFuZ291dHMiLCJpdGVtcyIsInNldEl0ZW1zIiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJyZWR1Y2VkIiwibGVuZ3RoIiwibWFwIiwidSIsImNvbG9yIl0sIm1hcHBpbmdzIjoiOztBQUFPLFNBQVNBLHFCQUFULENBQStCO0FBQUNDLEVBQUFBO0FBQUQsQ0FBL0IsRUFBZ0Q7QUFDbkQsU0FBU0EsY0FBYyxDQUFDQyxNQUFmLENBQXNCLENBQUNDLFdBQUQsRUFBY0MsT0FBZCxFQUF1QkMsS0FBdkIsS0FBaUM7QUFDNUQsUUFBSUEsS0FBSyxLQUFLLENBQWQsRUFBaUI7QUFDZixhQUFRRixXQUFXLEdBQUcsQ0FBQyxFQUFFLEdBQUdDLE9BQUw7QUFBY0UsUUFBQUEsWUFBWSxFQUFFO0FBQTVCLE9BQUQsQ0FBdEI7QUFDRCxLQUZELE1BRU87QUFDTCxZQUFNQyxHQUFHLEdBQUdKLFdBQVcsQ0FBQ0ssSUFBWixDQUNUQyxDQUFELElBQU9BLENBQUMsQ0FBQ0MsUUFBRixLQUFlTixPQUFPLENBQUNNLFFBQXZCLElBQW1DTixPQUFPLENBQUNPLEtBQVIsS0FBa0IsV0FEbEQsQ0FBWjs7QUFHQSxVQUFJSixHQUFKLEVBQVM7QUFDUCxjQUFNRixLQUFLLEdBQUdGLFdBQVcsQ0FBQ1MsU0FBWixDQUNYSCxDQUFELElBQU9BLENBQUMsQ0FBQ0MsUUFBRixLQUFlTixPQUFPLENBQUNNLFFBRGxCLENBQWQsQ0FETzs7QUFLUFAsUUFBQUEsV0FBVyxDQUFDVSxNQUFaLENBQW1CUixLQUFuQixFQUEwQixDQUExQixFQUE2QixFQUMzQixHQUFHRSxHQUR3QjtBQUUzQkQsVUFBQUEsWUFBWSxFQUFFLEVBQUVDLEdBQUcsQ0FBQ0Q7QUFGTyxTQUE3QjtBQUlELE9BVEQsTUFTTztBQUNMO0FBQ0FILFFBQUFBLFdBQVcsQ0FBQ1csSUFBWixDQUFpQixFQUFFLEdBQUdWLE9BQUw7QUFBY0UsVUFBQUEsWUFBWSxFQUFFO0FBQTVCLFNBQWpCO0FBQ0Q7QUFDRjs7QUFDRCxXQUFPSCxXQUFQO0FBQ0QsR0F0Qk0sRUFzQkosRUF0QkksQ0FBVDtBQXVCSDs7QUNwQmMsU0FBU1ksY0FBVCxDQUF3QjtBQUFFZCxFQUFBQTtBQUFGLENBQXhCLEVBQTRDO0FBQ3pELFFBQU0sQ0FBQ2UsS0FBRCxFQUFPQyxRQUFQLElBQWtCQyxDQUFRLENBQUMsRUFBRCxDQUFoQztBQUNGQyxFQUFBQSxDQUFTLENBQUMsTUFBSTtBQUNkLFFBQUdsQixjQUFILEVBQWtCO0FBQ2hCLFlBQU1tQixPQUFPLEdBQUVwQixxQkFBcUIsQ0FBQztBQUFDQyxRQUFBQTtBQUFELE9BQUQsQ0FBcEM7QUFDQWdCLE1BQUFBLFFBQVEsQ0FBQ0csT0FBRCxDQUFSO0FBQ0Q7QUFFQSxHQU5RLEVBTVAsQ0FBQ25CLGNBQUQsQ0FOTyxDQUFUO0FBUUUsU0FDRTtBQUFLLG1CQUFZO0FBQWpCLEtBQ0UsRUFBQyxJQUFELFFBQ0dlLEtBQUssSUFDSkEsS0FBSyxDQUFDSyxNQUFOLEdBQWUsQ0FEaEIsSUFFQ0wsS0FBSyxDQUFDTSxHQUFOLENBQVdDLENBQUQsSUFBTztBQUNmO0FBQ0YsV0FBTyxFQUFDLFFBQUQ7QUFBVSxNQUFBLEVBQUUsRUFBRUEsQ0FBQyxDQUFDYjtBQUFoQixPQUEyQmEsQ0FBQyxDQUFDYixRQUE3QixPQUF1QztBQUFLLE1BQUEsS0FBSyxFQUFFO0FBQUNjLFFBQUFBLEtBQUssRUFBQztBQUFQO0FBQVoscUJBQTBDRCxDQUFDLENBQUNqQixZQUE1QyxDQUF2QyxDQUFQO0FBQ0MsR0FIRCxDQUhKLENBREYsQ0FERjtBQVlEOzs7OyJ9
