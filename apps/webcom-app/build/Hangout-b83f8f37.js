import { a as useAppRoute, h, L as List, w as ListItem } from './index-8d46fc1e.js';
import { T as TextInput } from './TextInput-ace4d20c.js';
import { B as Button } from './Button-e37a8a54.js';

const style = {
  inputContainer: {
    display: 'flex',
    border: '#737373 solid 1px'
  },
  input: {
    padding: 10,
    flex: 1,
    border: 'white'
  }
};
function Hangout({
  hangouts,
  onSearch,
  onSelectHangout,
  search,
  username,
  onStartSearch,
  dispatch
}) {
  const {
    onAppRoute
  } = useAppRoute();

  function handleHangoutSelection(e) {
    const id = e.target.id;
    onSelectHangout(e);
    const hangout = hangouts.find(g => g.username === id);
    onAppRoute({
      featureRoute: `/${hangout.state}`,
      route: '/hangouts'
    });
  }

  return h("div", {
    style: {
      paddingTop: 68
    }
  }, h("div", {
    style: style.inputContainer
  }, h(TextInput, {
    value: search,
    id: "search-input",
    type: "search",
    onChange: onSearch,
    style: style.input
  }), h(Button, {
    "data-testid": "search-btn",
    disabled: !search,
    title: "search",
    onClick: onStartSearch
  })), h(List, {
    id: "hangouts-list"
  }, hangouts && hangouts.length > 0 && hangouts.map(g => {
    return h(ListItem, {
      id: g.username,
      onClick: handleHangoutSelection
    }, g.username);
  })));
}

export default Hangout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGFuZ291dC1iODNmOGYzNy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vY2xpZW50L2hhbmdvdXRzL0hhbmdvdXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCB9IGZyb20gJ3ByZWFjdCc7XG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdwcmVhY3QvaG9va3MnO1xuaW1wb3J0IHsgTGlzdCwgTGlzdEl0ZW0gfSBmcm9tICcuLi9sYXlvdXQvTmF2TGlzdCc7XG5pbXBvcnQgeyBUZXh0SW5wdXQgfSBmcm9tICcuLi9sYXlvdXQvVGV4dElucHV0JztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4uL2xheW91dC9CdXR0b24nO1xuaW1wb3J0IHt1c2VBcHBSb3V0ZX1mcm9tICcuLi9hcHAtcm91dGUvQXBwUm91dGVQcm92aWRlcidcbmltcG9ydCB7c2F2ZU1lc3NhZ2V9ZnJvbSAnLi9zdGF0ZS9hY3Rpb25zL2RlbGl2ZXJpbmctYWN0aW9ucy9zYXZlUGVuZGluZ0hhbmdvdXQnXG5cbmNvbnN0IHN0eWxlID0ge1xuICBpbnB1dENvbnRhaW5lcjoge1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBib3JkZXI6ICcjNzM3MzczIHNvbGlkIDFweCcsXG4gIH0sXG4gIGlucHV0OiB7XG4gICAgcGFkZGluZzogMTAsXG4gICAgZmxleDogMSxcbiAgICBib3JkZXI6ICd3aGl0ZScsXG4gIFxuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSGFuZ291dCh7XG4gIGhhbmdvdXRzLFxuICBvblNlYXJjaCxcbiAgb25TZWxlY3RIYW5nb3V0LFxuICBzZWFyY2gsXG4gIHVzZXJuYW1lLFxuICBvblN0YXJ0U2VhcmNoLFxuICBkaXNwYXRjaFxufSkge1xuICBjb25zdCB7b25BcHBSb3V0ZX09dXNlQXBwUm91dGUoKVxuICBmdW5jdGlvbiBoYW5kbGVIYW5nb3V0U2VsZWN0aW9uKGUpe1xuICAgIGNvbnN0IGlkID1lLnRhcmdldC5pZFxuICAgIG9uU2VsZWN0SGFuZ291dChlKVxuICAgIGNvbnN0IGhhbmdvdXQgPSBoYW5nb3V0cy5maW5kKGc9PiBnLnVzZXJuYW1lPT09aWQpXG4gIFxuICAgIG9uQXBwUm91dGUoe2ZlYXR1cmVSb3V0ZTpgLyR7aGFuZ291dC5zdGF0ZX1gLHJvdXRlOicvaGFuZ291dHMnfSlcbiAgfVxuICByZXR1cm4gKFxuIFxuICAgIDxkaXYgc3R5bGU9e3sgIHBhZGRpbmdUb3A6Njh9fT5cbiAgICAgIDxkaXYgc3R5bGU9e3N0eWxlLmlucHV0Q29udGFpbmVyfT5cbiAgICAgICAgPFRleHRJbnB1dFxuICAgICAgICAgIHZhbHVlPXtzZWFyY2h9XG4gICAgICAgICAgaWQ9XCJzZWFyY2gtaW5wdXRcIlxuICAgICAgICAgIHR5cGU9XCJzZWFyY2hcIlxuICAgICAgICAgIG9uQ2hhbmdlPXtvblNlYXJjaH1cbiAgICAgICAgICBzdHlsZT17c3R5bGUuaW5wdXR9XG4gICAgICAgIC8+XG4gICAgICAgIDxCdXR0b25cbiAgICAgICAgICBkYXRhLXRlc3RpZD1cInNlYXJjaC1idG5cIlxuICAgICAgICAgIGRpc2FibGVkPXshc2VhcmNofVxuICAgICAgICAgIHRpdGxlPVwic2VhcmNoXCJcbiAgICAgICAgICBvbkNsaWNrPXtvblN0YXJ0U2VhcmNofVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxMaXN0IGlkPVwiaGFuZ291dHMtbGlzdFwiPlxuICAgICAgICB7aGFuZ291dHMgJiZcbiAgICAgICAgICBoYW5nb3V0cy5sZW5ndGggPiAwICYmXG4gICAgICAgICAgaGFuZ291dHMubWFwKChnKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICA8TGlzdEl0ZW0gaWQ9e2cudXNlcm5hbWV9IG9uQ2xpY2s9e2hhbmRsZUhhbmdvdXRTZWxlY3Rpb259PlxuICAgICAgICAgICAgICAgIHtnLnVzZXJuYW1lfVxuICAgICAgICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9KX1cbiAgICAgIDwvTGlzdD5cbiAgIFxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbInN0eWxlIiwiaW5wdXRDb250YWluZXIiLCJkaXNwbGF5IiwiYm9yZGVyIiwiaW5wdXQiLCJwYWRkaW5nIiwiZmxleCIsIkhhbmdvdXQiLCJoYW5nb3V0cyIsIm9uU2VhcmNoIiwib25TZWxlY3RIYW5nb3V0Iiwic2VhcmNoIiwidXNlcm5hbWUiLCJvblN0YXJ0U2VhcmNoIiwiZGlzcGF0Y2giLCJvbkFwcFJvdXRlIiwidXNlQXBwUm91dGUiLCJoYW5kbGVIYW5nb3V0U2VsZWN0aW9uIiwiZSIsImlkIiwidGFyZ2V0IiwiaGFuZ291dCIsImZpbmQiLCJnIiwiZmVhdHVyZVJvdXRlIiwic3RhdGUiLCJyb3V0ZSIsInBhZGRpbmdUb3AiLCJsZW5ndGgiLCJtYXAiXSwibWFwcGluZ3MiOiI7Ozs7QUFRQSxNQUFNQSxLQUFLLEdBQUc7QUFDWkMsRUFBQUEsY0FBYyxFQUFFO0FBQ2RDLElBQUFBLE9BQU8sRUFBRSxNQURLO0FBRWRDLElBQUFBLE1BQU0sRUFBRTtBQUZNLEdBREo7QUFLWkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLE9BQU8sRUFBRSxFQURKO0FBRUxDLElBQUFBLElBQUksRUFBRSxDQUZEO0FBR0xILElBQUFBLE1BQU0sRUFBRTtBQUhIO0FBTEssQ0FBZDtBQWFlLFNBQVNJLE9BQVQsQ0FBaUI7QUFDOUJDLEVBQUFBLFFBRDhCO0FBRTlCQyxFQUFBQSxRQUY4QjtBQUc5QkMsRUFBQUEsZUFIOEI7QUFJOUJDLEVBQUFBLE1BSjhCO0FBSzlCQyxFQUFBQSxRQUw4QjtBQU05QkMsRUFBQUEsYUFOOEI7QUFPOUJDLEVBQUFBO0FBUDhCLENBQWpCLEVBUVo7QUFDRCxRQUFNO0FBQUNDLElBQUFBO0FBQUQsTUFBYUMsV0FBVyxFQUE5Qjs7QUFDQSxXQUFTQyxzQkFBVCxDQUFnQ0MsQ0FBaEMsRUFBa0M7QUFDaEMsVUFBTUMsRUFBRSxHQUFFRCxDQUFDLENBQUNFLE1BQUYsQ0FBU0QsRUFBbkI7QUFDQVQsSUFBQUEsZUFBZSxDQUFDUSxDQUFELENBQWY7QUFDQSxVQUFNRyxPQUFPLEdBQUdiLFFBQVEsQ0FBQ2MsSUFBVCxDQUFjQyxDQUFDLElBQUdBLENBQUMsQ0FBQ1gsUUFBRixLQUFhTyxFQUEvQixDQUFoQjtBQUVBSixJQUFBQSxVQUFVLENBQUM7QUFBQ1MsTUFBQUEsWUFBWSxFQUFFLElBQUdILE9BQU8sQ0FBQ0ksS0FBTSxFQUFoQztBQUFrQ0MsTUFBQUEsS0FBSyxFQUFDO0FBQXhDLEtBQUQsQ0FBVjtBQUNEOztBQUNELFNBRUU7QUFBSyxJQUFBLEtBQUssRUFBRTtBQUFHQyxNQUFBQSxVQUFVLEVBQUM7QUFBZDtBQUFaLEtBQ0U7QUFBSyxJQUFBLEtBQUssRUFBRTNCLEtBQUssQ0FBQ0M7QUFBbEIsS0FDRSxFQUFDLFNBQUQ7QUFDRSxJQUFBLEtBQUssRUFBRVUsTUFEVDtBQUVFLElBQUEsRUFBRSxFQUFDLGNBRkw7QUFHRSxJQUFBLElBQUksRUFBQyxRQUhQO0FBSUUsSUFBQSxRQUFRLEVBQUVGLFFBSlo7QUFLRSxJQUFBLEtBQUssRUFBRVQsS0FBSyxDQUFDSTtBQUxmLElBREYsRUFRRSxFQUFDLE1BQUQ7QUFDRSxtQkFBWSxZQURkO0FBRUUsSUFBQSxRQUFRLEVBQUUsQ0FBQ08sTUFGYjtBQUdFLElBQUEsS0FBSyxFQUFDLFFBSFI7QUFJRSxJQUFBLE9BQU8sRUFBRUU7QUFKWCxJQVJGLENBREYsRUFpQkUsRUFBQyxJQUFEO0FBQU0sSUFBQSxFQUFFLEVBQUM7QUFBVCxLQUNHTCxRQUFRLElBQ1BBLFFBQVEsQ0FBQ29CLE1BQVQsR0FBa0IsQ0FEbkIsSUFFQ3BCLFFBQVEsQ0FBQ3FCLEdBQVQsQ0FBY04sQ0FBRCxJQUFPO0FBQ2xCLFdBQ0UsRUFBQyxRQUFEO0FBQVUsTUFBQSxFQUFFLEVBQUVBLENBQUMsQ0FBQ1gsUUFBaEI7QUFBMEIsTUFBQSxPQUFPLEVBQUVLO0FBQW5DLE9BQ0dNLENBQUMsQ0FBQ1gsUUFETCxDQURGO0FBS0QsR0FORCxDQUhKLENBakJGLENBRkY7QUFpQ0Q7Ozs7In0=
