import { h } from './index-63ebe6d2.js';
import { B as Button, T as TextInput } from './index-ef9e6820.js';
import { A as Alert } from './index-f77d6fb4.js';

function Login(props) {
  const {
    emailorusername,
    password,
    loading,
    onLogin,
    onFocus,
    onChange,
    validation,
    onForgotPassword,
    onBlur,
    error
  } = props;
  return h("div", {
    className: "col-md-4 border mx-auto rounded",
    style: {
      margin: 15,
      padding: 16
    }
  }, loading && h("div", {
    className: "progress",
    style: "height: 5px;"
  }, h("div", {
    className: "progress-bar progress-bar-striped progress-bar-animated",
    role: "progressbar",
    "aria-valuenow": "100",
    "aria-valuemin": "0",
    "aria-valuemax": "100",
    style: "width: 100%"
  })), error && h(Alert, {
    alert: "danger",
    message: error.message
  }), h(TextInput, {
    onFocus: onFocus,
    onBlur: onBlur,
    value: emailorusername,
    onChange: onChange,
    label: "Email or username",
    name: "emailorusername",
    type: "text",
    placeholder: "Enter email or username",
    id: "emailorusername",
    "data-testid": "emailorusername",
    message: validation && validation['emailorusername'].message,
    isValid: validation && validation['emailorusername'].isValid
  }), h(TextInput, {
    onFocus: onFocus,
    onBlur: onBlur,
    label: "Password",
    value: password,
    onChange: onChange,
    name: "password",
    type: "password",
    placeholder: "enter password",
    id: "password",
    "data-testid": "password",
    message: validation && validation['password'].message,
    isValid: validation && validation['password'].isValid
  }), h("div", {
    style: {
      display: 'flex',
      justifyContent: 'space-between'
    }
  }, h(Button, {
    type: "button",
    id: "login-btn",
    "data-testid": "login-btn",
    onClick: onLogin,
    loading: loading,
    title: "Login",
    bg: "primary"
  }), h(Button, {
    onClick: onForgotPassword,
    id: "forgotpassword",
    "data-testid": "forgotpassword",
    outline: true,
    bg: "primary",
    title: "Forgot Password!"
  })));
}

export default Login;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9naW4tNDVjZjE4NTYuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NsaWVudC9mZWF0dXJlcy9hdXRoZW50aWNhdGlvbi91aS1jb21wb25lbnRzL0xvZ2luLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGggfSBmcm9tICdwcmVhY3QnO1xyXG5pbXBvcnQgVGV4dElucHV0IGZyb20gJ2NvbnRyb2xzL3RleHQtaW5wdXQnO1xyXG5pbXBvcnQgQnV0dG9uIGZyb20gJ2NvbnRyb2xzL2J1dHRvbidcclxuaW1wb3J0IEFsZXJ0IGZyb20gJ2NvbnRyb2xzL2FsZXJ0J1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMb2dpbihwcm9wcykge1xyXG4gIGNvbnN0IHsgZW1haWxvcnVzZXJuYW1lLCBwYXNzd29yZCwgbG9hZGluZywgb25Mb2dpbiwgb25Gb2N1cywgb25DaGFuZ2UsIHZhbGlkYXRpb24sIG9uRm9yZ290UGFzc3dvcmQsIG9uQmx1ciwgZXJyb3IgfSA9IHByb3BzO1xyXG5cclxuICByZXR1cm4gKFxyXG5cclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLW1kLTQgYm9yZGVyIG14LWF1dG8gcm91bmRlZFwiIHN0eWxlPXt7IG1hcmdpbjogMTUsIHBhZGRpbmc6IDE2IH19PlxyXG4gICAgICB7bG9hZGluZyAmJiA8ZGl2IGNsYXNzTmFtZT1cInByb2dyZXNzXCIgc3R5bGU9XCJoZWlnaHQ6IDVweDtcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2dyZXNzLWJhciBwcm9ncmVzcy1iYXItc3RyaXBlZCBwcm9ncmVzcy1iYXItYW5pbWF0ZWRcIiByb2xlPVwicHJvZ3Jlc3NiYXJcIiBhcmlhLXZhbHVlbm93PVwiMTAwXCIgYXJpYS12YWx1ZW1pbj1cIjBcIiBhcmlhLXZhbHVlbWF4PVwiMTAwXCIgc3R5bGU9XCJ3aWR0aDogMTAwJVwiPjwvZGl2PlxyXG4gICAgICA8L2Rpdj59XHJcbiAgICAgIHtlcnJvciAmJiA8QWxlcnQgYWxlcnQ9XCJkYW5nZXJcIiBtZXNzYWdlPXtlcnJvci5tZXNzYWdlfSAvPn1cclxuICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgIG9uRm9jdXM9e29uRm9jdXN9XHJcbiAgICAgICAgb25CbHVyPXtvbkJsdXJ9XHJcbiAgICAgICAgdmFsdWU9e2VtYWlsb3J1c2VybmFtZX1cclxuICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XHJcbiAgICAgICAgbGFiZWw9XCJFbWFpbCBvciB1c2VybmFtZVwiXHJcbiAgICAgICAgbmFtZT0nZW1haWxvcnVzZXJuYW1lJ1xyXG4gICAgICAgIHR5cGU9J3RleHQnXHJcbiAgICAgICAgcGxhY2Vob2xkZXI9J0VudGVyIGVtYWlsIG9yIHVzZXJuYW1lJ1xyXG4gICAgICAgIGlkPSdlbWFpbG9ydXNlcm5hbWUnXHJcbiAgICAgICAgZGF0YS10ZXN0aWQ9J2VtYWlsb3J1c2VybmFtZSdcclxuICAgICAgICBtZXNzYWdlPXt2YWxpZGF0aW9uICYmIHZhbGlkYXRpb25bJ2VtYWlsb3J1c2VybmFtZSddLm1lc3NhZ2V9XHJcbiAgICAgICAgaXNWYWxpZD17dmFsaWRhdGlvbiAmJiB2YWxpZGF0aW9uWydlbWFpbG9ydXNlcm5hbWUnXS5pc1ZhbGlkfVxyXG5cclxuICAgICAgLz5cclxuXHJcbiAgICAgIDxUZXh0SW5wdXRcclxuICAgICAgICBvbkZvY3VzPXtvbkZvY3VzfVxyXG4gICAgICAgIG9uQmx1cj17b25CbHVyfVxyXG4gICAgICAgIGxhYmVsPVwiUGFzc3dvcmRcIlxyXG4gICAgICAgIHZhbHVlPXtwYXNzd29yZH1cclxuICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XHJcbiAgICAgICAgbmFtZT0ncGFzc3dvcmQnXHJcbiAgICAgICAgdHlwZT0ncGFzc3dvcmQnXHJcbiAgICAgICAgcGxhY2Vob2xkZXI9J2VudGVyIHBhc3N3b3JkJ1xyXG4gICAgICAgIGlkPSdwYXNzd29yZCdcclxuICAgICAgICBkYXRhLXRlc3RpZD0ncGFzc3dvcmQnXHJcbiAgICAgICAgbWVzc2FnZT17dmFsaWRhdGlvbiAmJiB2YWxpZGF0aW9uWydwYXNzd29yZCddLm1lc3NhZ2V9XHJcbiAgICAgICAgaXNWYWxpZD17dmFsaWRhdGlvbiAmJiB2YWxpZGF0aW9uWydwYXNzd29yZCddLmlzVmFsaWR9XHJcblxyXG4gICAgICAvPlxyXG4gICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyB9fT5cclxuXHJcblxyXG4gICAgICAgIDxCdXR0b25cclxuICAgICAgICAgIHR5cGU9J2J1dHRvbidcclxuICAgICAgICAgIGlkPSdsb2dpbi1idG4nXHJcbiAgICAgICAgICBkYXRhLXRlc3RpZD0nbG9naW4tYnRuJ1xyXG4gICAgICAgICAgb25DbGljaz17b25Mb2dpbn1cclxuICAgICAgICAgIGxvYWRpbmc9e2xvYWRpbmd9XHJcbiAgICAgICAgICB0aXRsZT1cIkxvZ2luXCJcclxuICAgICAgICAgIGJnPVwicHJpbWFyeVwiXHJcbiAgICAgICAgLz5cclxuXHJcbiAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXtvbkZvcmdvdFBhc3N3b3JkfSBpZD0nZm9yZ290cGFzc3dvcmQnIGRhdGEtdGVzdGlkPSdmb3Jnb3RwYXNzd29yZCcgb3V0bGluZSBiZz1cInByaW1hcnlcIiB0aXRsZT1cIkZvcmdvdCBQYXNzd29yZCFcIiAvPlxyXG5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuXHJcblxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbIkxvZ2luIiwicHJvcHMiLCJlbWFpbG9ydXNlcm5hbWUiLCJwYXNzd29yZCIsImxvYWRpbmciLCJvbkxvZ2luIiwib25Gb2N1cyIsIm9uQ2hhbmdlIiwidmFsaWRhdGlvbiIsIm9uRm9yZ290UGFzc3dvcmQiLCJvbkJsdXIiLCJlcnJvciIsIm1hcmdpbiIsInBhZGRpbmciLCJtZXNzYWdlIiwiaXNWYWxpZCIsImRpc3BsYXkiLCJqdXN0aWZ5Q29udGVudCJdLCJtYXBwaW5ncyI6Ijs7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
