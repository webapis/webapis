import { h, _ as _extends, u as useAppRoute } from './index-a426f989.js';

function List(props) {
  return h("div", _extends({
    className: "list-group"
  }, props));
}

function ListItem(props) {
  return h("button", _extends({
    type: "button",
    className: "list-group-item list-group-item-action"
  }, props));
}

function Hangout({
  hangouts,
  onSearchInput,
  onFetchHangouts,
  onSelectHangout,
  search
}) {
  const {
    onAppRoute
  } = useAppRoute();

  function handleHangoutSelection(e) {
    const id = e.target.id;
    onSelectHangout(e);
    const hangout = hangouts.find(g => g.username === id);
    onAppRoute({
      featureRoute: `/${hangout.state}`,
      route: '/hangouts'
    });
  }

  return h("div", null, h("div", {
    class: "input-group mb-3"
  }, h("input", {
    value: search,
    id: "search-input",
    onChange: onSearchInput,
    type: "text",
    className: "form-control",
    "aria-label": "Recipient's username",
    "aria-describedby": "button-addon2"
  }), h("div", {
    className: "input-group-append"
  }, h("button", {
    className: "btn btn-outline-secondary",
    type: "button",
    id: "button-addon2",
    onClick: onFetchHangouts,
    "data-testid": "search-btn",
    disabled: !search
  }, "Search"))), h(List, {
    id: "hangouts-list"
  }, hangouts && hangouts.length > 0 && hangouts.map(g => {
    return h(ListItem, {
      id: g.username,
      "data-testid": g.username,
      onClick: handleHangoutSelection
    }, g.username);
  })));
}

export default Hangout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGFuZ291dC0wNmI1YTliYy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vY2xpZW50L2NvbXBvbmVudHMvY29udHJvbHMvbGlzdC9pbmRleC5qcyIsIi4uLy4uLy4uL2NsaWVudC9mZWF0dXJlcy9oYW5nb3V0cy91aS1jb21wb25lbnRzL0hhbmdvdXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IGggfSBmcm9tICdwcmVhY3QnO1xyXG5cclxuXHJcblxyXG4gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTGlzdChwcm9wcykge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImxpc3QtZ3JvdXBcIiB7Li4ucHJvcHN9Lz5cclxuICApO1xyXG59XHJcblxyXG5cclxuIGZ1bmN0aW9uIExpc3RJdGVtKHByb3BzKSB7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJsaXN0LWdyb3VwLWl0ZW0gbGlzdC1ncm91cC1pdGVtLWFjdGlvblwiIHsuLi5wcm9wc30vPlxyXG4gICk7XHJcbn1cclxuXHJcbmV4cG9ydCB7TGlzdEl0ZW19IiwiaW1wb3J0IHsgaCB9IGZyb20gJ3ByZWFjdCc7XHJcblxyXG5pbXBvcnQgTGlzdCwgeyBMaXN0SXRlbSB9IGZyb20gJ2NvbnRyb2xzL2xpc3QnO1xyXG5pbXBvcnQgVGV4dElucHV0IGZyb20gJ2NvbnRyb2xzL3RleHQtaW5wdXQnO1xyXG5pbXBvcnQgQnV0dG9uIGZyb20gJ2NvbnRyb2xzL2J1dHRvbic7XHJcbmltcG9ydCB7IHVzZUFwcFJvdXRlIH0gZnJvbSAnY29tcG9uZW50cy9hcHAtcm91dGUnXHJcblxyXG5cclxuY29uc3Qgc3R5bGUgPSB7XHJcbiAgaW5wdXRDb250YWluZXI6IHtcclxuICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgIGJvcmRlcjogJyM3MzczNzMgc29saWQgMXB4JyxcclxuICB9LFxyXG4gIGlucHV0OiB7XHJcbiAgICBwYWRkaW5nOiAxMCxcclxuICAgIGZsZXg6IDEsXHJcbiAgICBib3JkZXI6ICd3aGl0ZScsXHJcblxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIYW5nb3V0KHtcclxuICBoYW5nb3V0cyxcclxuICBvblNlYXJjaElucHV0LFxyXG4gIG9uRmV0Y2hIYW5nb3V0cyxcclxuICBvblNlbGVjdEhhbmdvdXQsXHJcbiAgc2VhcmNoXHJcbn0pIHtcclxuICBjb25zdCB7IG9uQXBwUm91dGUgfSA9IHVzZUFwcFJvdXRlKClcclxuICBmdW5jdGlvbiBoYW5kbGVIYW5nb3V0U2VsZWN0aW9uKGUpIHtcclxuICAgIGNvbnN0IGlkID0gZS50YXJnZXQuaWRcclxuICAgIG9uU2VsZWN0SGFuZ291dChlKVxyXG4gICAgY29uc3QgaGFuZ291dCA9IGhhbmdvdXRzLmZpbmQoZyA9PiBnLnVzZXJuYW1lID09PSBpZClcclxuXHJcbiAgICBvbkFwcFJvdXRlKHsgZmVhdHVyZVJvdXRlOiBgLyR7aGFuZ291dC5zdGF0ZX1gLCByb3V0ZTogJy9oYW5nb3V0cycgfSlcclxuICB9XHJcblxyXG5cclxuICByZXR1cm4gKFxyXG5cclxuICAgIDxkaXYgPlxyXG5cclxuICAgICAgPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwIG1iLTNcIj5cclxuICAgICAgICA8aW5wdXQgdmFsdWU9e3NlYXJjaH0gaWQ9XCJzZWFyY2gtaW5wdXRcIiBvbkNoYW5nZT17b25TZWFyY2hJbnB1dH0gdHlwZT1cInRleHRcIiBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIiBhcmlhLWxhYmVsPVwiUmVjaXBpZW50J3MgdXNlcm5hbWVcIiBhcmlhLWRlc2NyaWJlZGJ5PVwiYnV0dG9uLWFkZG9uMlwiIC8+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dC1ncm91cC1hcHBlbmRcIj5cclxuICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1vdXRsaW5lLXNlY29uZGFyeVwiIHR5cGU9XCJidXR0b25cIiBpZD1cImJ1dHRvbi1hZGRvbjJcIiBvbkNsaWNrPXtvbkZldGNoSGFuZ291dHN9IGRhdGEtdGVzdGlkPVwic2VhcmNoLWJ0blwiIGRpc2FibGVkPXshc2VhcmNofT5TZWFyY2g8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxMaXN0IGlkPVwiaGFuZ291dHMtbGlzdFwiPlxyXG4gICAgICAgIHtoYW5nb3V0cyAmJlxyXG4gICAgICAgICAgaGFuZ291dHMubGVuZ3RoID4gMCAmJlxyXG4gICAgICAgICAgaGFuZ291dHMubWFwKChnKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgPExpc3RJdGVtIGlkPXtnLnVzZXJuYW1lfSBkYXRhLXRlc3RpZD17Zy51c2VybmFtZX0gb25DbGljaz17aGFuZGxlSGFuZ291dFNlbGVjdGlvbn0+XHJcbiAgICAgICAgICAgICAgICB7Zy51c2VybmFtZX1cclxuICAgICAgICAgICAgICA8L0xpc3RJdGVtPlxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgfSl9XHJcbiAgICAgIDwvTGlzdD5cclxuXHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJMaXN0IiwicHJvcHMiLCJMaXN0SXRlbSIsIkhhbmdvdXQiLCJoYW5nb3V0cyIsIm9uU2VhcmNoSW5wdXQiLCJvbkZldGNoSGFuZ291dHMiLCJvblNlbGVjdEhhbmdvdXQiLCJzZWFyY2giLCJvbkFwcFJvdXRlIiwidXNlQXBwUm91dGUiLCJoYW5kbGVIYW5nb3V0U2VsZWN0aW9uIiwiZSIsImlkIiwidGFyZ2V0IiwiaGFuZ291dCIsImZpbmQiLCJnIiwidXNlcm5hbWUiLCJmZWF0dXJlUm91dGUiLCJzdGF0ZSIsInJvdXRlIiwibGVuZ3RoIiwibWFwIl0sIm1hcHBpbmdzIjoiOztBQUtnQixTQUFTQSxJQUFULENBQWNDLEtBQWQsRUFBcUI7QUFDbkMsU0FDRTtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsS0FBZ0NBLEtBQWhDLEVBREY7QUFHRDs7QUFHQSxTQUFTQyxRQUFULENBQWtCRCxLQUFsQixFQUF5QjtBQUV4QixTQUNFO0FBQVEsSUFBQSxJQUFJLEVBQUMsUUFBYjtBQUFzQixJQUFBLFNBQVMsRUFBQztBQUFoQyxLQUE2RUEsS0FBN0UsRUFERjtBQUdEOztBQ0ljLFNBQVNFLE9BQVQsQ0FBaUI7QUFDOUJDLEVBQUFBLFFBRDhCO0FBRTlCQyxFQUFBQSxhQUY4QjtBQUc5QkMsRUFBQUEsZUFIOEI7QUFJOUJDLEVBQUFBLGVBSjhCO0FBSzlCQyxFQUFBQTtBQUw4QixDQUFqQixFQU1aO0FBQ0QsUUFBTTtBQUFFQyxJQUFBQTtBQUFGLE1BQWlCQyxXQUFXLEVBQWxDOztBQUNBLFdBQVNDLHNCQUFULENBQWdDQyxDQUFoQyxFQUFtQztBQUNqQyxVQUFNQyxFQUFFLEdBQUdELENBQUMsQ0FBQ0UsTUFBRixDQUFTRCxFQUFwQjtBQUNBTixJQUFBQSxlQUFlLENBQUNLLENBQUQsQ0FBZjtBQUNBLFVBQU1HLE9BQU8sR0FBR1gsUUFBUSxDQUFDWSxJQUFULENBQWNDLENBQUMsSUFBSUEsQ0FBQyxDQUFDQyxRQUFGLEtBQWVMLEVBQWxDLENBQWhCO0FBRUFKLElBQUFBLFVBQVUsQ0FBQztBQUFFVSxNQUFBQSxZQUFZLEVBQUcsSUFBR0osT0FBTyxDQUFDSyxLQUFNLEVBQWxDO0FBQXFDQyxNQUFBQSxLQUFLLEVBQUU7QUFBNUMsS0FBRCxDQUFWO0FBQ0Q7O0FBR0QsU0FFRSxlQUVFO0FBQUssSUFBQSxLQUFLLEVBQUM7QUFBWCxLQUNFO0FBQU8sSUFBQSxLQUFLLEVBQUViLE1BQWQ7QUFBc0IsSUFBQSxFQUFFLEVBQUMsY0FBekI7QUFBd0MsSUFBQSxRQUFRLEVBQUVILGFBQWxEO0FBQWlFLElBQUEsSUFBSSxFQUFDLE1BQXRFO0FBQTZFLElBQUEsU0FBUyxFQUFDLGNBQXZGO0FBQXNHLGtCQUFXLHNCQUFqSDtBQUF3SSx3QkFBaUI7QUFBekosSUFERixFQUVFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUNFO0FBQVEsSUFBQSxTQUFTLEVBQUMsMkJBQWxCO0FBQThDLElBQUEsSUFBSSxFQUFDLFFBQW5EO0FBQTRELElBQUEsRUFBRSxFQUFDLGVBQS9EO0FBQStFLElBQUEsT0FBTyxFQUFFQyxlQUF4RjtBQUF5RyxtQkFBWSxZQUFySDtBQUFrSSxJQUFBLFFBQVEsRUFBRSxDQUFDRTtBQUE3SSxjQURGLENBRkYsQ0FGRixFQVFFLEVBQUMsSUFBRDtBQUFNLElBQUEsRUFBRSxFQUFDO0FBQVQsS0FDR0osUUFBUSxJQUNQQSxRQUFRLENBQUNrQixNQUFULEdBQWtCLENBRG5CLElBRUNsQixRQUFRLENBQUNtQixHQUFULENBQWNOLENBQUQsSUFBTztBQUNsQixXQUNFLEVBQUMsUUFBRDtBQUFVLE1BQUEsRUFBRSxFQUFFQSxDQUFDLENBQUNDLFFBQWhCO0FBQTBCLHFCQUFhRCxDQUFDLENBQUNDLFFBQXpDO0FBQW1ELE1BQUEsT0FBTyxFQUFFUDtBQUE1RCxPQUNHTSxDQUFDLENBQUNDLFFBREwsQ0FERjtBQUtELEdBTkQsQ0FISixDQVJGLENBRkY7QUF3QkQ7Ozs7In0=
