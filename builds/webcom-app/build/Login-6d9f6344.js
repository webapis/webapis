import { h } from './index-18a5883a.js';
import { B as Button, T as TextInput, A as Alert } from './index-35ea3e6e.js';

function Login(props) {
  const {
    emailorusername,
    password,
    loading,
    onLogin,
    onFocus,
    onChange,
    validation,
    onForgotPassword,
    onBlur,
    error
  } = props;
  return h("div", {
    className: "col-md-4 border mx-auto rounded",
    style: {
      margin: 15,
      padding: 16
    }
  }, loading && h("div", {
    className: "progress",
    style: "height: 5px;"
  }, h("div", {
    className: "progress-bar progress-bar-striped progress-bar-animated",
    role: "progressbar",
    "aria-valuenow": "100",
    "aria-valuemin": "0",
    "aria-valuemax": "100",
    style: "width: 100%"
  })), error && h(Alert, {
    alert: "danger",
    message: error.message
  }), h(TextInput, {
    onFocus: onFocus,
    onBlur: onBlur,
    value: emailorusername,
    onChange: onChange,
    label: "Email or username",
    name: "emailorusername",
    type: "text",
    id: "emailorusername",
    "data-testid": "emailorusername",
    message: validation && validation['emailorusername'].message,
    isValid: validation && validation['emailorusername'].isValid
  }), h(TextInput, {
    onFocus: onFocus,
    onBlur: onBlur,
    label: "Password",
    value: password,
    onChange: onChange,
    name: "password",
    type: "password",
    id: "password",
    "data-testid": "password",
    message: validation && validation['password'].message,
    isValid: validation && validation['password'].isValid
  }), h("div", {
    style: {
      display: 'flex',
      justifyContent: 'space-between'
    }
  }, h(Button, {
    type: "button",
    id: "login-btn",
    "data-testid": "login-btn",
    onClick: onLogin,
    loading: loading,
    title: "Login",
    bg: "primary"
  }), h(Button, {
    onClick: onForgotPassword,
    id: "forgotpassword",
    "data-testid": "forgotpassword",
    outline: true,
    bg: "primary",
    title: "Forgot Password!"
  })));
}

export default Login;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9naW4tNmQ5ZjYzNDQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NsaWVudC9mZWF0dXJlcy9hdXRoZW50aWNhdGlvbi91aS1jb21wb25lbnRzL0xvZ2luLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGggfSBmcm9tICdwcmVhY3QnO1xyXG5pbXBvcnQgVGV4dElucHV0IGZyb20gJ2NvbnRyb2xzL3RleHQtaW5wdXQnO1xyXG5pbXBvcnQgQnV0dG9uIGZyb20gJ2NvbnRyb2xzL2J1dHRvbidcclxuaW1wb3J0IEFsZXJ0IGZyb20gJ2NvbnRyb2xzL2FsZXJ0J1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMb2dpbihwcm9wcykge1xyXG4gIGNvbnN0IHsgZW1haWxvcnVzZXJuYW1lLCBwYXNzd29yZCwgbG9hZGluZywgb25Mb2dpbiwgb25Gb2N1cywgb25DaGFuZ2UsIHZhbGlkYXRpb24sIG9uRm9yZ290UGFzc3dvcmQsIG9uQmx1ciwgZXJyb3IgfSA9IHByb3BzO1xyXG5cclxuICByZXR1cm4gKFxyXG5cclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLW1kLTQgYm9yZGVyIG14LWF1dG8gcm91bmRlZFwiIHN0eWxlPXt7IG1hcmdpbjogMTUsIHBhZGRpbmc6IDE2IH19PlxyXG4gICAgICB7bG9hZGluZyAmJiA8ZGl2IGNsYXNzTmFtZT1cInByb2dyZXNzXCIgc3R5bGU9XCJoZWlnaHQ6IDVweDtcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2dyZXNzLWJhciBwcm9ncmVzcy1iYXItc3RyaXBlZCBwcm9ncmVzcy1iYXItYW5pbWF0ZWRcIiByb2xlPVwicHJvZ3Jlc3NiYXJcIiBhcmlhLXZhbHVlbm93PVwiMTAwXCIgYXJpYS12YWx1ZW1pbj1cIjBcIiBhcmlhLXZhbHVlbWF4PVwiMTAwXCIgc3R5bGU9XCJ3aWR0aDogMTAwJVwiPjwvZGl2PlxyXG4gICAgICA8L2Rpdj59XHJcbiAgICAgIHtlcnJvciAmJiA8QWxlcnQgYWxlcnQ9XCJkYW5nZXJcIiBtZXNzYWdlPXtlcnJvci5tZXNzYWdlfSAvPn1cclxuICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgIG9uRm9jdXM9e29uRm9jdXN9XHJcbiAgICAgICAgb25CbHVyPXtvbkJsdXJ9XHJcbiAgICAgICAgdmFsdWU9e2VtYWlsb3J1c2VybmFtZX1cclxuICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XHJcbiAgICAgICAgbGFiZWw9XCJFbWFpbCBvciB1c2VybmFtZVwiXHJcbiAgICAgICAgbmFtZT0nZW1haWxvcnVzZXJuYW1lJ1xyXG4gICAgICAgIHR5cGU9J3RleHQnXHJcbiAgICAgXHJcbiAgICAgICAgaWQ9J2VtYWlsb3J1c2VybmFtZSdcclxuICAgICAgICBkYXRhLXRlc3RpZD0nZW1haWxvcnVzZXJuYW1lJ1xyXG4gICAgICAgIG1lc3NhZ2U9e3ZhbGlkYXRpb24gJiYgdmFsaWRhdGlvblsnZW1haWxvcnVzZXJuYW1lJ10ubWVzc2FnZX1cclxuICAgICAgICBpc1ZhbGlkPXt2YWxpZGF0aW9uICYmIHZhbGlkYXRpb25bJ2VtYWlsb3J1c2VybmFtZSddLmlzVmFsaWR9XHJcblxyXG4gICAgICAvPlxyXG5cclxuICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgIG9uRm9jdXM9e29uRm9jdXN9XHJcbiAgICAgICAgb25CbHVyPXtvbkJsdXJ9XHJcbiAgICAgICAgbGFiZWw9XCJQYXNzd29yZFwiXHJcbiAgICAgICAgdmFsdWU9e3Bhc3N3b3JkfVxyXG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuICAgICAgICBuYW1lPSdwYXNzd29yZCdcclxuICAgICAgICB0eXBlPSdwYXNzd29yZCdcclxuICAgICBcclxuICAgICAgICBpZD0ncGFzc3dvcmQnXHJcbiAgICAgICAgZGF0YS10ZXN0aWQ9J3Bhc3N3b3JkJ1xyXG4gICAgICAgIG1lc3NhZ2U9e3ZhbGlkYXRpb24gJiYgdmFsaWRhdGlvblsncGFzc3dvcmQnXS5tZXNzYWdlfVxyXG4gICAgICAgIGlzVmFsaWQ9e3ZhbGlkYXRpb24gJiYgdmFsaWRhdGlvblsncGFzc3dvcmQnXS5pc1ZhbGlkfVxyXG5cclxuICAgICAgLz5cclxuICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicgfX0+XHJcblxyXG5cclxuICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICB0eXBlPSdidXR0b24nXHJcbiAgICAgICAgICBpZD0nbG9naW4tYnRuJ1xyXG4gICAgICAgICAgZGF0YS10ZXN0aWQ9J2xvZ2luLWJ0bidcclxuICAgICAgICAgIG9uQ2xpY2s9e29uTG9naW59XHJcbiAgICAgICAgICBsb2FkaW5nPXtsb2FkaW5nfVxyXG4gICAgICAgICAgdGl0bGU9XCJMb2dpblwiXHJcbiAgICAgICAgICBiZz1cInByaW1hcnlcIlxyXG4gICAgICAgIC8+XHJcblxyXG4gICAgICAgIDxCdXR0b24gb25DbGljaz17b25Gb3Jnb3RQYXNzd29yZH0gaWQ9J2ZvcmdvdHBhc3N3b3JkJyBkYXRhLXRlc3RpZD0nZm9yZ290cGFzc3dvcmQnIG91dGxpbmUgYmc9XCJwcmltYXJ5XCIgdGl0bGU9XCJGb3Jnb3QgUGFzc3dvcmQhXCIgLz5cclxuXHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcblxyXG5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJMb2dpbiIsInByb3BzIiwiZW1haWxvcnVzZXJuYW1lIiwicGFzc3dvcmQiLCJsb2FkaW5nIiwib25Mb2dpbiIsIm9uRm9jdXMiLCJvbkNoYW5nZSIsInZhbGlkYXRpb24iLCJvbkZvcmdvdFBhc3N3b3JkIiwib25CbHVyIiwiZXJyb3IiLCJtYXJnaW4iLCJwYWRkaW5nIiwibWVzc2FnZSIsImlzVmFsaWQiLCJkaXNwbGF5IiwianVzdGlmeUNvbnRlbnQiXSwibWFwcGluZ3MiOiI7OztBQUllLFNBQVNBLEtBQVQsQ0FBZUMsS0FBZixFQUFzQjtBQUNuQyxRQUFNO0FBQUVDLElBQUFBLGVBQUY7QUFBbUJDLElBQUFBLFFBQW5CO0FBQTZCQyxJQUFBQSxPQUE3QjtBQUFzQ0MsSUFBQUEsT0FBdEM7QUFBK0NDLElBQUFBLE9BQS9DO0FBQXdEQyxJQUFBQSxRQUF4RDtBQUFrRUMsSUFBQUEsVUFBbEU7QUFBOEVDLElBQUFBLGdCQUE5RTtBQUFnR0MsSUFBQUEsTUFBaEc7QUFBd0dDLElBQUFBO0FBQXhHLE1BQWtIVixLQUF4SDtBQUVBLFNBRUU7QUFBSyxJQUFBLFNBQVMsRUFBQyxpQ0FBZjtBQUFpRCxJQUFBLEtBQUssRUFBRTtBQUFFVyxNQUFBQSxNQUFNLEVBQUUsRUFBVjtBQUFjQyxNQUFBQSxPQUFPLEVBQUU7QUFBdkI7QUFBeEQsS0FDR1QsT0FBTyxJQUFJO0FBQUssSUFBQSxTQUFTLEVBQUMsVUFBZjtBQUEwQixJQUFBLEtBQUssRUFBQztBQUFoQyxLQUNWO0FBQUssSUFBQSxTQUFTLEVBQUMseURBQWY7QUFBeUUsSUFBQSxJQUFJLEVBQUMsYUFBOUU7QUFBNEYscUJBQWMsS0FBMUc7QUFBZ0gscUJBQWMsR0FBOUg7QUFBa0kscUJBQWMsS0FBaEo7QUFBc0osSUFBQSxLQUFLLEVBQUM7QUFBNUosSUFEVSxDQURkLEVBSUdPLEtBQUssSUFBSSxFQUFDLEtBQUQ7QUFBTyxJQUFBLEtBQUssRUFBQyxRQUFiO0FBQXNCLElBQUEsT0FBTyxFQUFFQSxLQUFLLENBQUNHO0FBQXJDLElBSlosRUFLRSxFQUFDLFNBQUQ7QUFDRSxJQUFBLE9BQU8sRUFBRVIsT0FEWDtBQUVFLElBQUEsTUFBTSxFQUFFSSxNQUZWO0FBR0UsSUFBQSxLQUFLLEVBQUVSLGVBSFQ7QUFJRSxJQUFBLFFBQVEsRUFBRUssUUFKWjtBQUtFLElBQUEsS0FBSyxFQUFDLG1CQUxSO0FBTUUsSUFBQSxJQUFJLEVBQUMsaUJBTlA7QUFPRSxJQUFBLElBQUksRUFBQyxNQVBQO0FBU0UsSUFBQSxFQUFFLEVBQUMsaUJBVEw7QUFVRSxtQkFBWSxpQkFWZDtBQVdFLElBQUEsT0FBTyxFQUFFQyxVQUFVLElBQUlBLFVBQVUsQ0FBQyxpQkFBRCxDQUFWLENBQThCTSxPQVh2RDtBQVlFLElBQUEsT0FBTyxFQUFFTixVQUFVLElBQUlBLFVBQVUsQ0FBQyxpQkFBRCxDQUFWLENBQThCTztBQVp2RCxJQUxGLEVBcUJFLEVBQUMsU0FBRDtBQUNFLElBQUEsT0FBTyxFQUFFVCxPQURYO0FBRUUsSUFBQSxNQUFNLEVBQUVJLE1BRlY7QUFHRSxJQUFBLEtBQUssRUFBQyxVQUhSO0FBSUUsSUFBQSxLQUFLLEVBQUVQLFFBSlQ7QUFLRSxJQUFBLFFBQVEsRUFBRUksUUFMWjtBQU1FLElBQUEsSUFBSSxFQUFDLFVBTlA7QUFPRSxJQUFBLElBQUksRUFBQyxVQVBQO0FBU0UsSUFBQSxFQUFFLEVBQUMsVUFUTDtBQVVFLG1CQUFZLFVBVmQ7QUFXRSxJQUFBLE9BQU8sRUFBRUMsVUFBVSxJQUFJQSxVQUFVLENBQUMsVUFBRCxDQUFWLENBQXVCTSxPQVhoRDtBQVlFLElBQUEsT0FBTyxFQUFFTixVQUFVLElBQUlBLFVBQVUsQ0FBQyxVQUFELENBQVYsQ0FBdUJPO0FBWmhELElBckJGLEVBb0NFO0FBQUssSUFBQSxLQUFLLEVBQUU7QUFBRUMsTUFBQUEsT0FBTyxFQUFFLE1BQVg7QUFBbUJDLE1BQUFBLGNBQWMsRUFBRTtBQUFuQztBQUFaLEtBR0UsRUFBQyxNQUFEO0FBQ0UsSUFBQSxJQUFJLEVBQUMsUUFEUDtBQUVFLElBQUEsRUFBRSxFQUFDLFdBRkw7QUFHRSxtQkFBWSxXQUhkO0FBSUUsSUFBQSxPQUFPLEVBQUVaLE9BSlg7QUFLRSxJQUFBLE9BQU8sRUFBRUQsT0FMWDtBQU1FLElBQUEsS0FBSyxFQUFDLE9BTlI7QUFPRSxJQUFBLEVBQUUsRUFBQztBQVBMLElBSEYsRUFhRSxFQUFDLE1BQUQ7QUFBUSxJQUFBLE9BQU8sRUFBRUssZ0JBQWpCO0FBQW1DLElBQUEsRUFBRSxFQUFDLGdCQUF0QztBQUF1RCxtQkFBWSxnQkFBbkU7QUFBb0YsSUFBQSxPQUFPLE1BQTNGO0FBQTRGLElBQUEsRUFBRSxFQUFDLFNBQS9GO0FBQXlHLElBQUEsS0FBSyxFQUFDO0FBQS9HLElBYkYsQ0FwQ0YsQ0FGRjtBQTBERDs7OzsifQ==
