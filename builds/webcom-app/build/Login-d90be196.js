import { h } from './index-6eb738dc.js';
import { T as TextInput } from './index-a36249ca.js';
import { A as AsyncButton } from './index-bb149304.js';
import { P as Paper } from './Paper-ca71e768.js';

function Login(props) {
  const {
    emailorusername,
    password,
    loading,
    onNavigation,
    onLogin,
    onChange
  } = props;
  return h(Paper, null, h("div", {
    style: {
      flex: 1,
      display: 'flex',
      flexDirection: 'column'
    }
  }, h(TextInput, {
    value: emailorusername,
    onChange: onChange,
    label: "Email or username",
    name: "emailorusername",
    type: "text",
    placeholder: "Enter email or username",
    id: "emailOrUsername",
    "data-testid": "emailOrUsername" // validationTypes={[
    //   validationTypes.USERNAME_OR_EMAIL_FORMAT_VALIDATION,
    //   validationTypes.INVALID_CREDENTIALS,
    //   validationTypes.EMAIL_NOT_REGISTERED,
    //   validationTypes.USERNAME_NOT_REGISTERED,
    // ]}

  }), h(TextInput, {
    label: "Password",
    value: password,
    onChange: onChange,
    name: "password",
    type: "password",
    placeholder: "enter password",
    id: "password",
    "data-testid": "password" // validationTypes={[
    //   validationTypes.EMPTY_STRING_VALIDATION,
    //   validationTypes.INVALID_CREDENTIALS,
    // ]}

  }), h(AsyncButton, {
    type: "button",
    id: "login-btn",
    "data-testid": "login-btn",
    onClick: onLogin,
    loading: loading
  }, "LOGIN"), h("a", {
    href: "/",
    onClick: onNavigation,
    id: "forgotpassword",
    "data-testid": "forgotpassword"
  }, "Forgot Password!")));
}

export default Login;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9naW4tZDkwYmUxOTYuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NsaWVudC9mZWF0dXJlcy9hdXRoZW50aWNhdGlvbi91aS1jb21wb25lbnRzL0xvZ2luLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGggfSBmcm9tICdwcmVhY3QnO1xyXG5pbXBvcnQgVGV4dElucHV0IGZyb20gJ2NvbnRyb2xzL3RleHQtaW5wdXQnO1xyXG5pbXBvcnQgQXN5bmNCdXR0b24gZnJvbSAnY29udHJvbHMvYXN5bmMtYnV0dG9uJ1xyXG5pbXBvcnQgeyBQYXBlciB9IGZyb20gJ2NvbXBvbmVudHMvbGF5b3V0L1BhcGVyJztcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMb2dpbihwcm9wcykge1xyXG4gIGNvbnN0IHsgZW1haWxvcnVzZXJuYW1lLCBwYXNzd29yZCxsb2FkaW5nLG9uTmF2aWdhdGlvbixvbkxvZ2luLG9uQ2hhbmdlIH0gPXByb3BzO1xyXG4gIHJldHVybiAoXHJcbiAgICAgIDxQYXBlcj5cclxuICAgICAgPGRpdiBzdHlsZSA9e3tmbGV4OjEsZGlzcGxheTonZmxleCcsIGZsZXhEaXJlY3Rpb246J2NvbHVtbid9fT5cclxuICAgICAgICAgIDxUZXh0SW5wdXRcclxuICAgICAgICAgICAgdmFsdWU9e2VtYWlsb3J1c2VybmFtZX1cclxuICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxyXG4gICAgICAgICAgICBsYWJlbD1cIkVtYWlsIG9yIHVzZXJuYW1lXCJcclxuICAgICAgICAgICAgbmFtZT0nZW1haWxvcnVzZXJuYW1lJ1xyXG4gICAgICAgICAgICB0eXBlPSd0ZXh0J1xyXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj0nRW50ZXIgZW1haWwgb3IgdXNlcm5hbWUnXHJcbiAgICAgICAgICAgIGlkPSdlbWFpbE9yVXNlcm5hbWUnXHJcbiAgICAgICAgICAgIGRhdGEtdGVzdGlkPSdlbWFpbE9yVXNlcm5hbWUnXHJcbiAgICAgICAgICAgIC8vIHZhbGlkYXRpb25UeXBlcz17W1xyXG4gICAgICAgICAgICAvLyAgIHZhbGlkYXRpb25UeXBlcy5VU0VSTkFNRV9PUl9FTUFJTF9GT1JNQVRfVkFMSURBVElPTixcclxuICAgICAgICAgICAgLy8gICB2YWxpZGF0aW9uVHlwZXMuSU5WQUxJRF9DUkVERU5USUFMUyxcclxuICAgICAgICAgICAgLy8gICB2YWxpZGF0aW9uVHlwZXMuRU1BSUxfTk9UX1JFR0lTVEVSRUQsXHJcbiAgICAgICAgICAgIC8vICAgdmFsaWRhdGlvblR5cGVzLlVTRVJOQU1FX05PVF9SRUdJU1RFUkVELFxyXG4gICAgICAgICAgICAvLyBdfVxyXG4gICAgICAgICAgLz5cclxuXHJcbiAgICAgICAgICA8VGV4dElucHV0XHJcbiAgICAgICAgICAgIGxhYmVsPVwiUGFzc3dvcmRcIlxyXG4gICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmR9XHJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuICAgICAgICAgICAgbmFtZT0ncGFzc3dvcmQnXHJcbiAgICAgICAgICAgIHR5cGU9J3Bhc3N3b3JkJ1xyXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj0nZW50ZXIgcGFzc3dvcmQnXHJcbiAgICAgICAgICAgIGlkPSdwYXNzd29yZCdcclxuICAgICAgICAgICAgZGF0YS10ZXN0aWQ9J3Bhc3N3b3JkJ1xyXG4gICAgICAgICAgICAvLyB2YWxpZGF0aW9uVHlwZXM9e1tcclxuICAgICAgICAgICAgLy8gICB2YWxpZGF0aW9uVHlwZXMuRU1QVFlfU1RSSU5HX1ZBTElEQVRJT04sXHJcbiAgICAgICAgICAgIC8vICAgdmFsaWRhdGlvblR5cGVzLklOVkFMSURfQ1JFREVOVElBTFMsXHJcbiAgICAgICAgICAgIC8vIF19XHJcbiAgICAgICAgICAvPlxyXG5cclxuICAgICAgICAgIDxBc3luY0J1dHRvblxyXG4gICAgICAgICAgICB0eXBlPSdidXR0b24nXHJcbiAgICAgICAgICAgIGlkPSdsb2dpbi1idG4nXHJcbiAgICAgICAgICAgIGRhdGEtdGVzdGlkPSdsb2dpbi1idG4nXHJcbiAgICAgICAgICAgIG9uQ2xpY2s9e29uTG9naW59XHJcbiAgICAgICAgICAgIGxvYWRpbmc9e2xvYWRpbmd9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIExPR0lOXHJcbiAgICAgICAgICA8L0FzeW5jQnV0dG9uPlxyXG4gICAgICAgICAgPGEgaHJlZj0nLycgb25DbGljaz17b25OYXZpZ2F0aW9ufSBpZD0nZm9yZ290cGFzc3dvcmQnIGRhdGEtdGVzdGlkPSdmb3Jnb3RwYXNzd29yZCc+XHJcbiAgICAgICAgICAgIEZvcmdvdCBQYXNzd29yZCFcclxuICAgICAgICAgIDwvYT5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICA8L1BhcGVyPlxyXG5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJMb2dpbiIsInByb3BzIiwiZW1haWxvcnVzZXJuYW1lIiwicGFzc3dvcmQiLCJsb2FkaW5nIiwib25OYXZpZ2F0aW9uIiwib25Mb2dpbiIsIm9uQ2hhbmdlIiwiZmxleCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7OztBQU1lLFNBQVNBLEtBQVQsQ0FBZUMsS0FBZixFQUFzQjtBQUNuQyxRQUFNO0FBQUVDLElBQUFBLGVBQUY7QUFBbUJDLElBQUFBLFFBQW5CO0FBQTRCQyxJQUFBQSxPQUE1QjtBQUFvQ0MsSUFBQUEsWUFBcEM7QUFBaURDLElBQUFBLE9BQWpEO0FBQXlEQyxJQUFBQTtBQUF6RCxNQUFxRU4sS0FBM0U7QUFDQSxTQUNJLEVBQUMsS0FBRCxRQUNBO0FBQUssSUFBQSxLQUFLLEVBQUc7QUFBQ08sTUFBQUEsSUFBSSxFQUFDLENBQU47QUFBUUMsTUFBQUEsT0FBTyxFQUFDLE1BQWhCO0FBQXdCQyxNQUFBQSxhQUFhLEVBQUM7QUFBdEM7QUFBYixLQUNJLEVBQUMsU0FBRDtBQUNFLElBQUEsS0FBSyxFQUFFUixlQURUO0FBRUUsSUFBQSxRQUFRLEVBQUVLLFFBRlo7QUFHRSxJQUFBLEtBQUssRUFBQyxtQkFIUjtBQUlFLElBQUEsSUFBSSxFQUFDLGlCQUpQO0FBS0UsSUFBQSxJQUFJLEVBQUMsTUFMUDtBQU1FLElBQUEsV0FBVyxFQUFDLHlCQU5kO0FBT0UsSUFBQSxFQUFFLEVBQUMsaUJBUEw7QUFRRSxtQkFBWSxpQkFSZDtBQVVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBZEYsSUFESixFQWtCSSxFQUFDLFNBQUQ7QUFDRSxJQUFBLEtBQUssRUFBQyxVQURSO0FBRUUsSUFBQSxLQUFLLEVBQUVKLFFBRlQ7QUFHRSxJQUFBLFFBQVEsRUFBRUksUUFIWjtBQUlFLElBQUEsSUFBSSxFQUFDLFVBSlA7QUFLRSxJQUFBLElBQUksRUFBQyxVQUxQO0FBTUUsSUFBQSxXQUFXLEVBQUMsZ0JBTmQ7QUFPRSxJQUFBLEVBQUUsRUFBQyxVQVBMO0FBUUUsbUJBQVksVUFSZDtBQVVFO0FBQ0E7QUFDQTs7QUFaRixJQWxCSixFQWlDSSxFQUFDLFdBQUQ7QUFDRSxJQUFBLElBQUksRUFBQyxRQURQO0FBRUUsSUFBQSxFQUFFLEVBQUMsV0FGTDtBQUdFLG1CQUFZLFdBSGQ7QUFJRSxJQUFBLE9BQU8sRUFBRUQsT0FKWDtBQUtFLElBQUEsT0FBTyxFQUFFRjtBQUxYLGFBakNKLEVBMENJO0FBQUcsSUFBQSxJQUFJLEVBQUMsR0FBUjtBQUFZLElBQUEsT0FBTyxFQUFFQyxZQUFyQjtBQUFtQyxJQUFBLEVBQUUsRUFBQyxnQkFBdEM7QUFBdUQsbUJBQVk7QUFBbkUsd0JBMUNKLENBREEsQ0FESjtBQW1ERDs7OzsifQ==
