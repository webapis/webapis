import { v, p, h } from "./index-c4021a67.js";

function useMediaQuery() {
  const [width, setWidth] = v(0);
  const [height, setHeight] = v(0);
  const [orientation, setOrientation] = v("");
  const [device, setDevice] = v("");

  function handleViewportSize() {
    setWidth(window.innerWidth);
    setHeight(window.innerHeight);
  }

  function handleScreenOrientation() {
    setOrientation(window.screen.orientation);
  }

  p(() => {
    if (width > 0) {
      switch (true) {
        case width <= 600:
          setDevice("phone");
          break;

        case width <= 768:
        case width <= 992:
        case width <= 1200:
          setDevice("tablet");
          break;

        case width <= 2560:
          setDevice("laptop");
          break;

        case width > 2560:
          setDevice("desktop");
          break;

        default:
          setDevice("");
      }
    }
  }, [width]);
  p(() => {
    console.log("device", device);
  }, [device]);
  p(() => {
    handleViewportSize();
    handleScreenOrientation();
    window.addEventListener("orientationchange", handleScreenOrientation);
    window.addEventListener("resize", () => handleViewportSize);
    return () => {
      // window.removeEventListener();
      // window.removeEventListener(handleScreenOrientation);
    };
  }, []);
  return {
    width,
    height,
    orientation,
    device,
  };
}

const style = {
  root: {
    borderColor: "#eeeeee",
    borderStyle: "solid",
    borderWidth: 1,
    borderRadius: 5,
    padding: 3,
    display: "flex",
    flexDirection: "column",
    justifyContent: "space-between",
    minHeight: 35,
    backgroundColor: "white",
  },
  username: {
    marginRight: 8,
  },
  log: {
    display: "flex",
    color: "#737373",
    fontSize: 10,
  },
  message: {},
}; //

function Message(props) {
  const { message } = props;
  const { float, username, timestamp } = message;
  const [days, setDays] = v(0);
  const [hours, setHours] = v(0);
  const [minutes, setMinutes] = v(0);
  const [seconds, setSeconds] = v(0);
  const { device } = useMediaQuery();

  function convertMS(ms) {
    var d, h, m, s;
    s = Math.floor(ms / 1000);
    m = Math.floor(s / 60);
    s = s % 60;
    h = Math.floor(m / 60);
    m = m % 60;
    d = Math.floor(h / 24);
    h = h % 24;
    setDays(d);
    setHours(h);
    setMinutes(m);
    setSeconds(s);
  }

  p(() => {
    if (timestamp) {
      setTimeout(() => {
        convertMS(Date.now() - timestamp);
      }, 0);
      setInterval(() => {
        convertMS(Date.now() - timestamp);
      }, 60000);
    }
  }, [timestamp]);
  return h(
    "div",
    {
      style: {
        width: "100%",
        marginBottom: 3,
      },
    },
    h(
      "div",
      {
        style: { ...style.root, float },
      },
      h(
        "div",
        {
          "data-testid": "message",
          style: style.message,
          className: `message-font-${device}-size`,
        },
        message && message.text
      ),
      h(
        "div",
        {
          style: style.log,
        },
        h(
          "div",
          {
            style: style.username,
          },
          username && username,
          ":"
        ),
        h(
          "div",
          null,
          minutes === 0 && h("div", null, "Now"),
          hours === 0 &&
            minutes > 0 &&
            h("div", null, minutes, " minutes ago "),
          hours > 0 &&
            days === 0 &&
            h("div", null, hours, " hours ", minutes, " minutes ago", " "),
          days <= 10 && days > 1 && h("div", null, days, " days ago")
        )
      )
    )
  );
}

export { Message as M, useMediaQuery as u };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
