import { h } from './index-e818a723.js';
import { B as Button, T as TextInput } from './index-6be3ba0e.js';

function Signup(props) {
  const {
    username,
    password,
    email,
    loading,
    onSignup,
    onChange,
    validation
  } = props;
  return h("div", {
    className: "col-md-4 border mx-auto rounded",
    style: {
      margin: 15,
      padding: 16
    }
  }, loading && h("div", {
    className: "progress",
    style: "height: 5px;"
  }, h("div", {
    className: "progress-bar progress-bar-striped progress-bar-animated",
    role: "progressbar",
    "aria-valuenow": "100",
    "aria-valuemin": "0",
    "aria-valuemax": "100",
    style: "width: 100%"
  })), h(TextInput, {
    label: "Username",
    value: username,
    onChange: onChange,
    type: "text",
    "data-testid": "username",
    name: "username",
    placeholder: "username",
    isValid: validation && validation['username'].isValid,
    message: validation && validation['username'].message // validationTypes={[
    //   validationTypes.USERNAME_FORMAT_VALIDATION,
    //   validationTypes.USERNAME_TAKEN,
    //   validationTypes.EMPTY_STRING_VALIDATION,
    // ]}

  }), h(TextInput, {
    label: "Email",
    onChange: onChange,
    value: email,
    placeholder: "email",
    type: "email",
    "data-testid": "email",
    name: "email",
    isValid: validation && validation['email'].isValid,
    message: validation && validation['email'].message // validationTypes={[
    //   validationTypes.EMAIL_FORMAT_VALIDATION,
    //   validationTypes.REGISTERED_EMAIL,
    // ]}

  }), h(TextInput, {
    label: "Password",
    onChange: onChange,
    value: password,
    placeholder: "password",
    type: "password",
    "data-testid": "password",
    name: "password",
    isValid: validation && validation['password'].isValid,
    message: validation && validation['password'].message // validationTypes={[validationTypes.PASSWORD_FORMAT_VALIDATION]}

  }), h(Button, {
    type: "button",
    onClick: onSignup,
    id: "signup-btn",
    "data-testid": "signup-btn",
    loading: loading,
    title: "Signup",
    bg: "primary"
  }));
}

export default Signup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lnbnVwLWVmZjQwNTA3LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9jbGllbnQvZmVhdHVyZXMvYXV0aGVudGljYXRpb24vdWktY29tcG9uZW50cy9TaWdudXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCB9IGZyb20gJ3ByZWFjdCc7XHJcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3ByZWFjdC9ob29rcyc7XHJcblxyXG5cclxuaW1wb3J0IEJ1dHRvbiBmcm9tICdjb250cm9scy9idXR0b24nXHJcbmltcG9ydCBUZXh0SW5wdXQgZnJvbSAnY29udHJvbHMvdGV4dC1pbnB1dCdcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2lnbnVwKHByb3BzKSB7XHJcbiAgY29uc3QgeyB1c2VybmFtZSwgcGFzc3dvcmQsIGVtYWlsLGxvYWRpbmcsb25TaWdudXAsb25DaGFuZ2UsdmFsaWRhdGlvbiB9ID0gcHJvcHM7XHJcbiAgcmV0dXJuIChcclxuPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtNCBib3JkZXIgbXgtYXV0byByb3VuZGVkXCIgc3R5bGU9e3ttYXJnaW46MTUsIHBhZGRpbmc6MTZ9fT5cclxue2xvYWRpbmcgJiYgIDxkaXYgY2xhc3NOYW1lPVwicHJvZ3Jlc3NcIiBzdHlsZT1cImhlaWdodDogNXB4O1wiPlxyXG4gIDxkaXYgY2xhc3NOYW1lPVwicHJvZ3Jlc3MtYmFyIHByb2dyZXNzLWJhci1zdHJpcGVkIHByb2dyZXNzLWJhci1hbmltYXRlZFwiIHJvbGU9XCJwcm9ncmVzc2JhclwiIGFyaWEtdmFsdWVub3c9XCIxMDBcIiBhcmlhLXZhbHVlbWluPVwiMFwiIGFyaWEtdmFsdWVtYXg9XCIxMDBcIiBzdHlsZT1cIndpZHRoOiAxMDAlXCI+PC9kaXY+XHJcbjwvZGl2Pn1cclxuICAgICAgICAgIDxUZXh0SW5wdXRcclxuICAgICAgICAgICAgbGFiZWw9XCJVc2VybmFtZVwiXHJcbiAgICAgICAgICAgIHZhbHVlPXt1c2VybmFtZX1cclxuICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxyXG4gICAgICAgICAgICB0eXBlPSd0ZXh0J1xyXG4gICAgICAgICAgICBkYXRhLXRlc3RpZD0ndXNlcm5hbWUnXHJcbiAgICAgICAgICAgIG5hbWU9J3VzZXJuYW1lJ1xyXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj0ndXNlcm5hbWUnXHJcbiAgICAgICAgICAgIGlzVmFsaWQ9e3ZhbGlkYXRpb24gJiYgdmFsaWRhdGlvblsndXNlcm5hbWUnXS5pc1ZhbGlkfVxyXG4gICAgICAgICAgICBtZXNzYWdlPXt2YWxpZGF0aW9uICYmIHZhbGlkYXRpb25bJ3VzZXJuYW1lJ10ubWVzc2FnZX1cclxuICAgICAgICAgICAgLy8gdmFsaWRhdGlvblR5cGVzPXtbXHJcbiAgICAgICAgICAgIC8vICAgdmFsaWRhdGlvblR5cGVzLlVTRVJOQU1FX0ZPUk1BVF9WQUxJREFUSU9OLFxyXG4gICAgICAgICAgICAvLyAgIHZhbGlkYXRpb25UeXBlcy5VU0VSTkFNRV9UQUtFTixcclxuICAgICAgICAgICAgLy8gICB2YWxpZGF0aW9uVHlwZXMuRU1QVFlfU1RSSU5HX1ZBTElEQVRJT04sXHJcbiAgICAgICAgICAgIC8vIF19XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgICAgICBsYWJlbD1cIkVtYWlsXCJcclxuICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxyXG4gICAgICAgICAgICB2YWx1ZT17ZW1haWx9XHJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPSdlbWFpbCdcclxuICAgICAgICAgICAgdHlwZT0nZW1haWwnXHJcbiAgICAgICAgICAgIGRhdGEtdGVzdGlkPSdlbWFpbCdcclxuICAgICAgICAgICAgbmFtZT0nZW1haWwnXHJcbiAgICAgICAgICAgIGlzVmFsaWQ9e3ZhbGlkYXRpb24gJiYgdmFsaWRhdGlvblsnZW1haWwnXS5pc1ZhbGlkfVxyXG4gICAgICAgICAgICBtZXNzYWdlPXt2YWxpZGF0aW9uICYmIHZhbGlkYXRpb25bJ2VtYWlsJ10ubWVzc2FnZX1cclxuICAgICAgICAgICAgLy8gdmFsaWRhdGlvblR5cGVzPXtbXHJcbiAgICAgICAgICAgIC8vICAgdmFsaWRhdGlvblR5cGVzLkVNQUlMX0ZPUk1BVF9WQUxJREFUSU9OLFxyXG4gICAgICAgICAgICAvLyAgIHZhbGlkYXRpb25UeXBlcy5SRUdJU1RFUkVEX0VNQUlMLFxyXG4gICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIF19XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgICAgICBsYWJlbD1cIlBhc3N3b3JkXCJcclxuICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxyXG4gICAgICAgICAgICB2YWx1ZT17cGFzc3dvcmR9XHJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPSdwYXNzd29yZCdcclxuICAgICAgICAgICAgdHlwZT0ncGFzc3dvcmQnXHJcbiAgICAgICAgICAgIGRhdGEtdGVzdGlkPSdwYXNzd29yZCdcclxuICAgICAgICAgICAgbmFtZT0ncGFzc3dvcmQnXHJcbiAgICAgICAgICAgIGlzVmFsaWQ9e3ZhbGlkYXRpb24gJiYgdmFsaWRhdGlvblsncGFzc3dvcmQnXS5pc1ZhbGlkfVxyXG4gICAgICAgICAgICBtZXNzYWdlPXt2YWxpZGF0aW9uICYmIHZhbGlkYXRpb25bJ3Bhc3N3b3JkJ10ubWVzc2FnZX1cclxuICAgICAgICAgICAgLy8gdmFsaWRhdGlvblR5cGVzPXtbdmFsaWRhdGlvblR5cGVzLlBBU1NXT1JEX0ZPUk1BVF9WQUxJREFUSU9OXX1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICBcclxuICAgICAgICAgICAgdHlwZT0nYnV0dG9uJ1xyXG4gICAgICAgICAgICBvbkNsaWNrPXtvblNpZ251cH1cclxuICAgICAgICAgICAgaWQ9J3NpZ251cC1idG4nXHJcbiAgICAgICAgICAgIGRhdGEtdGVzdGlkPVwic2lnbnVwLWJ0blwiXHJcbiAgICAgICAgICAgIGxvYWRpbmc9e2xvYWRpbmd9XHJcbiAgICAgICAgICAgIHRpdGxlPVwiU2lnbnVwXCJcclxuICAgICAgICAgICAgYmc9XCJwcmltYXJ5XCJcclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgIFxyXG4gICAgICAgICAgXHJcbiAgXHJcbiAgICAgICAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJTaWdudXAiLCJwcm9wcyIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJlbWFpbCIsImxvYWRpbmciLCJvblNpZ251cCIsIm9uQ2hhbmdlIiwidmFsaWRhdGlvbiIsIm1hcmdpbiIsInBhZGRpbmciLCJpc1ZhbGlkIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7O0FBTWUsU0FBU0EsTUFBVCxDQUFnQkMsS0FBaEIsRUFBdUI7QUFDcEMsUUFBTTtBQUFFQyxJQUFBQSxRQUFGO0FBQVlDLElBQUFBLFFBQVo7QUFBc0JDLElBQUFBLEtBQXRCO0FBQTRCQyxJQUFBQSxPQUE1QjtBQUFvQ0MsSUFBQUEsUUFBcEM7QUFBNkNDLElBQUFBLFFBQTdDO0FBQXNEQyxJQUFBQTtBQUF0RCxNQUFxRVAsS0FBM0U7QUFDQSxTQUNGO0FBQUssSUFBQSxTQUFTLEVBQUMsaUNBQWY7QUFBaUQsSUFBQSxLQUFLLEVBQUU7QUFBQ1EsTUFBQUEsTUFBTSxFQUFDLEVBQVI7QUFBWUMsTUFBQUEsT0FBTyxFQUFDO0FBQXBCO0FBQXhELEtBQ0NMLE9BQU8sSUFBSztBQUFLLElBQUEsU0FBUyxFQUFDLFVBQWY7QUFBMEIsSUFBQSxLQUFLLEVBQUM7QUFBaEMsS0FDWDtBQUFLLElBQUEsU0FBUyxFQUFDLHlEQUFmO0FBQXlFLElBQUEsSUFBSSxFQUFDLGFBQTlFO0FBQTRGLHFCQUFjLEtBQTFHO0FBQWdILHFCQUFjLEdBQTlIO0FBQWtJLHFCQUFjLEtBQWhKO0FBQXNKLElBQUEsS0FBSyxFQUFDO0FBQTVKLElBRFcsQ0FEYixFQUlVLEVBQUMsU0FBRDtBQUNFLElBQUEsS0FBSyxFQUFDLFVBRFI7QUFFRSxJQUFBLEtBQUssRUFBRUgsUUFGVDtBQUdFLElBQUEsUUFBUSxFQUFFSyxRQUhaO0FBSUUsSUFBQSxJQUFJLEVBQUMsTUFKUDtBQUtFLG1CQUFZLFVBTGQ7QUFNRSxJQUFBLElBQUksRUFBQyxVQU5QO0FBT0UsSUFBQSxXQUFXLEVBQUMsVUFQZDtBQVFFLElBQUEsT0FBTyxFQUFFQyxVQUFVLElBQUlBLFVBQVUsQ0FBQyxVQUFELENBQVYsQ0FBdUJHLE9BUmhEO0FBU0UsSUFBQSxPQUFPLEVBQUVILFVBQVUsSUFBSUEsVUFBVSxDQUFDLFVBQUQsQ0FBVixDQUF1QkksT0FUaEQ7QUFXRTtBQUNBO0FBQ0E7QUFDQTs7QUFkRixJQUpWLEVBb0JVLEVBQUMsU0FBRDtBQUNFLElBQUEsS0FBSyxFQUFDLE9BRFI7QUFFRSxJQUFBLFFBQVEsRUFBRUwsUUFGWjtBQUdFLElBQUEsS0FBSyxFQUFFSCxLQUhUO0FBSUUsSUFBQSxXQUFXLEVBQUMsT0FKZDtBQUtFLElBQUEsSUFBSSxFQUFDLE9BTFA7QUFNRSxtQkFBWSxPQU5kO0FBT0UsSUFBQSxJQUFJLEVBQUMsT0FQUDtBQVFFLElBQUEsT0FBTyxFQUFFSSxVQUFVLElBQUlBLFVBQVUsQ0FBQyxPQUFELENBQVYsQ0FBb0JHLE9BUjdDO0FBU0UsSUFBQSxPQUFPLEVBQUVILFVBQVUsSUFBSUEsVUFBVSxDQUFDLE9BQUQsQ0FBVixDQUFvQkksT0FUN0M7QUFXRTtBQUNBO0FBRUE7O0FBZEYsSUFwQlYsRUFvQ1UsRUFBQyxTQUFEO0FBQ0UsSUFBQSxLQUFLLEVBQUMsVUFEUjtBQUVFLElBQUEsUUFBUSxFQUFFTCxRQUZaO0FBR0UsSUFBQSxLQUFLLEVBQUVKLFFBSFQ7QUFJRSxJQUFBLFdBQVcsRUFBQyxVQUpkO0FBS0UsSUFBQSxJQUFJLEVBQUMsVUFMUDtBQU1FLG1CQUFZLFVBTmQ7QUFPRSxJQUFBLElBQUksRUFBQyxVQVBQO0FBUUUsSUFBQSxPQUFPLEVBQUVLLFVBQVUsSUFBSUEsVUFBVSxDQUFDLFVBQUQsQ0FBVixDQUF1QkcsT0FSaEQ7QUFTRSxJQUFBLE9BQU8sRUFBRUgsVUFBVSxJQUFJQSxVQUFVLENBQUMsVUFBRCxDQUFWLENBQXVCSSxPQVRoRDs7QUFBQSxJQXBDVixFQWdEVSxFQUFDLE1BQUQ7QUFFRSxJQUFBLElBQUksRUFBQyxRQUZQO0FBR0UsSUFBQSxPQUFPLEVBQUVOLFFBSFg7QUFJRSxJQUFBLEVBQUUsRUFBQyxZQUpMO0FBS0UsbUJBQVksWUFMZDtBQU1FLElBQUEsT0FBTyxFQUFFRCxPQU5YO0FBT0UsSUFBQSxLQUFLLEVBQUMsUUFQUjtBQVFFLElBQUEsRUFBRSxFQUFDO0FBUkwsSUFoRFYsQ0FERTtBQWdFRDs7OzsifQ==
